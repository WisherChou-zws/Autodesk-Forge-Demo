/*!
 * LMV v7.1.1
 * 
 * Copyright 2019 Autodesk, Inc.
 * All rights reserved.
 * 
 * This computer source code and related instructions and comments are the
 * unpublished confidential and proprietary information of Autodesk, Inc.
 * and are protected under Federal copyright and state trade secret law.
 * They may not be disclosed to, copied or used by any third party without
 * the prior written consent of Autodesk, Inc.
 * 
 * Autodesk Forge Viewer Usage Limitations:
 * 
 * The Autodesk Forge viewer can only be used to view files generated by
 * Autodesk Forge services. The Autodesk Forge Viewer JavaScript must be
 * delivered from an Autodesk hosted URL.
 */
Autodesk.Extensions.DocumentBrowser =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./extensions/DocumentBrowser/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./extensions/DocumentBrowser/Panel.css":
/*!**********************************************!*\
  !*** ./extensions/DocumentBrowser/Panel.css ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader!./Panel.css */ "./node_modules/css-loader/index.js!./extensions/DocumentBrowser/Panel.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./extensions/DocumentBrowser/Panel.js":
/*!*********************************************!*\
  !*** ./extensions/DocumentBrowser/Panel.js ***!
  \*********************************************/
/*! exports provided: Panel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Panel", function() { return Panel; });
/* harmony import */ var _Panel_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Panel.css */ "./extensions/DocumentBrowser/Panel.css");
/* harmony import */ var _Panel_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Panel_css__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TreeViewDelegate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TreeViewDelegate */ "./extensions/DocumentBrowser/TreeViewDelegate.js");
/* harmony import */ var _ThumbnailList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ThumbnailList */ "./extensions/DocumentBrowser/ThumbnailList.js");
function _typeof(obj) {if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (_typeof(call) === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _get(target, property, receiver) {if (typeof Reflect !== "undefined" && Reflect.get) {_get = Reflect.get;} else {_get = function _get(target, property, receiver) {var base = _superPropBase(target, property);if (!base) return;var desc = Object.getOwnPropertyDescriptor(base, property);if (desc.get) {return desc.get.call(receiver);}return desc.value;};}return _get(target, property, receiver || target);}function _superPropBase(object, property) {while (!Object.prototype.hasOwnProperty.call(object, property)) {object = _getPrototypeOf(object);if (object === null) break;}return object;}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}




var av = Autodesk.Viewing;
var avu = Autodesk.Viewing.UI;

var TAB_ID_TREE = 'tree';
var TAB_ID_THUMBS = 'thumbnails';

var HEIGHT_ADJUSTMENT = 50 /*title-bar*/ + 40 /*tab-bar*/ + 20 /*footer*/;


// avu.SettingsPanel will not be available in headless mode, 
// so we switch to an empty super class to prevent an exception 
// thrown by babel env preset - "TypeError: Super expression must either be null or a function"
var SuperClass = avu.SettingsPanel || /*#__PURE__*/function () {function _class() {_classCallCheck(this, _class);}return _class;}();

var Panel = /*#__PURE__*/function (_SuperClass) {_inherits(Panel, _SuperClass);

  function Panel(viewer, currNode) {var _this;_classCallCheck(this, Panel);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(Panel).call(this, viewer.container, 'lmv-document-extension', 'Document Browser', { heightAdjustment: HEIGHT_ADJUSTMENT }));

    _this.title.classList.add("docking-panel-delimiter-shadow");
    _this.container.classList.add("viewer-document-browser");
    _this.container.classList.add('viewer-settings-panel');

    _this.currNode = currNode;
    _this.viewer = viewer;
    _this._created = false;return _this;
  }_createClass(Panel, [{ key: "setChangeModelHandler", value: function setChangeModelHandler(

    changeModelFn) {
      this._changeModelFn = changeModelFn;
    } }, { key: "toggleVisibility", value: function toggleVisibility()

    {
      if (this._created) {
        var isVisible = this.container.style.display !== 'none';
        this.setVisible(!isVisible);
      } else {
        // Create UI for the first time.
        this.addTab(TAB_ID_TREE, "Tree", {});
        this.addTab(TAB_ID_THUMBS, "Thumbnails", {});
        this.selectTab(TAB_ID_TREE);
        this.setVisible(true);
        this.container.style.top = '30px';
        this.container.style.width = '400px';
        this.resizeToContent();
        this._created = true;
      }
    } }, { key: "destroy", value: function destroy()

    {
      if (this.myThumbnailList) {
        this.myThumbnailList.destroy();
        this.myThumbnailList = null;
      }
      if (this.myTree) {
        this.myTree.destroy();
        this.myTree = null;
      }
      if (this.container) {
        this.container.parentElement.removeChild(this.container);
        this.container = null;
      }
    } }, { key: "setVisible", value: function setVisible(

    show) {
      _get(_getPrototypeOf(Panel.prototype), "setVisible", this).call(this, show);
    }

    /** 
       * @param {BubbleNode} currNode - Node to be highlighted on the list 
       */ }, { key: "setCurrentNode", value: function setCurrentNode(
    currNode) {
      this.currNode = currNode;
      this._updateTreeSelection(currNode);
    }

    /**
       * Overrides base class implementation so that the thumbnail
       * list view gets created the first time the tab is selected.
       */ }, { key: "selectTab", value: function selectTab(
    tabId) {

      // Create UI first time it gets used.
      switch (tabId) {
        case TAB_ID_TREE:
          this._createTreeView();
          break;

        case TAB_ID_THUMBS:
          this._createThumbnailView();
          break;}


      var ret = _get(_getPrototypeOf(Panel.prototype), "selectTab", this).call(this, tabId);
      this._updateTreeSelection(this.currNode, tabId);
      this._scrollToSelection(tabId);
      return ret;
    }

    /**
       * @private
       */ }, { key: "_getTabDiv", value: function _getTabDiv(
    tabId) {
      var index = this.tabIdToIndex[tabId];
      if (index === undefined)
      return null;

      var table = this.tablesContainer.childNodes[index];
      return table.tBodies[0];
    }

    /**
       * @private
       */ }, { key: "_createTreeView", value: function _createTreeView()
    {
      if (this.myTree) return;

      var rootNode = this.currNode.getRootNode();
      var delegate = Object(_TreeViewDelegate__WEBPACK_IMPORTED_MODULE_1__["createTreeViewDelegate"])(rootNode, this);
      var options = {
        leafClassName: 'docBrowserLeaf',
        selectedClassName: 'selected-ex' };


      var container = this._getTabDiv(TAB_ID_TREE);

      this.myTree = new Autodesk.Viewing.UI.Tree(
      delegate,
      rootNode,
      container,
      options);

    }

    /**
       * @private
       */ }, { key: "_createThumbnailView", value: function _createThumbnailView()
    {

      if (this.myThumbnailList) return;

      var container = this._getTabDiv(TAB_ID_THUMBS);
      var rootNode = this.currNode.getRootNode();
      this.myThumbnailList = new _ThumbnailList__WEBPACK_IMPORTED_MODULE_2__["ThumbnailListView"](container, rootNode, this);
      this.myThumbnailList.initialize();
    }

    /**
       * @param {BubbleNode} bubbleNode
       * @param {string} [tabId] - optional, the specific tabId to update.
       * @private
       */ }, { key: "_updateTreeSelection", value: function _updateTreeSelection(
    bubbleNode, tabId) {
      var geomNode = this.currNode.findParentGeom2Dor3D();
      var selection = [geomNode];
      if (geomNode !== bubbleNode) {
        selection.push(bubbleNode);
      }

      tabId = tabId || this.getSelectedTabId();
      switch (tabId) {
        case TAB_ID_TREE:
          this.myTree.setSelection(selection);
          break;

        case TAB_ID_THUMBS:
          this.myThumbnailList.setSelection(selection);
          break;}

    }

    /**
       * @private
       */ }, { key: "_scrollToSelection", value: function _scrollToSelection(
    tabId) {
      switch (tabId) {
        case TAB_ID_TREE:
          this.myTree.scrollTo(this.myTree.getSelection()[0]);
          break;

        case TAB_ID_THUMBS:
          this.myThumbnailList.scrollToSelection();
          break;}

    }

    /**
       * @private
       */ }, { key: "_tryLoad", value: function _tryLoad(
    bubbleNode) {var _this2 = this;

      // Avoid loading the same model
      var currGeomNode = this.currNode.findParentGeom2Dor3D();
      var nextGeomNode = bubbleNode.findParentGeom2Dor3D({ fallbackParent: currGeomNode });

      // Click on something that doesn't represent a geometry, like a folder.
      if (!nextGeomNode)
      return;

      // The next model is different, load it.
      if (currGeomNode !== nextGeomNode) {

        this.currNode = bubbleNode;
        this._updateTreeSelection(bubbleNode);
        this._changeModelFn(bubbleNode).
        then(function () {
          _this2._hookUnselectCameraChange(bubbleNode);
        });
        return;
      }

      // Same model

      // view?
      if (bubbleNode.isViewPreset()) {
        this._updateTreeSelection(bubbleNode);
        this.viewer.setView(bubbleNode);
        this._hookUnselectViewAfterTransition(bubbleNode);
        return;
      }

      if (bubbleNode.isGeometry()) {
        this._updateTreeSelection(bubbleNode);
        this.viewer.setViewFromFile(this.viewer.model);
        return;
      }

    }

    /**
       * Unselects a `view` node when the camera changes.
       * No point in having a view selected once a camera interaction takes place.
       * 
       * @param {BubbleNode} bubbleNode
       *
       * @private
       */ }, { key: "_hookUnselectViewAfterTransition", value: function _hookUnselectViewAfterTransition(
    bubbleNode) {var _this3 = this;
      if (!bubbleNode || bubbleNode.type() !== 'view')
      return;

      this.viewer.addEventListener(av.CAMERA_TRANSITION_COMPLETED, function () {
        _this3._hookUnselectCameraChange(bubbleNode);
      }, { once: true });
    }

    /**
       * Unselects a `view` node when the camera changes.
       * No point in having a view selected once a camera interaction takes place.
       * 
       * @param {Autodesk.Viewing.BubbleNode} bubbleNode
       *
       * @private
       */ }, { key: "_hookUnselectCameraChange", value: function _hookUnselectCameraChange(
    bubbleNode) {var _this4 = this;
      if (!bubbleNode || bubbleNode.type() !== 'view')
      return;

      // Need to delay the hook...
      setTimeout(function () {
        _this4.viewer.addEventListener(av.CAMERA_CHANGE_EVENT, function () {
          _this4.myTree.removeFromSelection([bubbleNode]);
        }, { once: true });
      }, 200);
    } }]);return Panel;}(SuperClass);

/***/ }),

/***/ "./extensions/DocumentBrowser/ThumbnailList.css":
/*!******************************************************!*\
  !*** ./extensions/DocumentBrowser/ThumbnailList.css ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader!./ThumbnailList.css */ "./node_modules/css-loader/index.js!./extensions/DocumentBrowser/ThumbnailList.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./extensions/DocumentBrowser/ThumbnailList.js":
/*!*****************************************************!*\
  !*** ./extensions/DocumentBrowser/ThumbnailList.js ***!
  \*****************************************************/
/*! exports provided: ThumbnailListView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThumbnailListView", function() { return ThumbnailListView; });
/* harmony import */ var _ThumbnailList_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ThumbnailList.css */ "./extensions/DocumentBrowser/ThumbnailList.css");
/* harmony import */ var _ThumbnailList_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ThumbnailList_css__WEBPACK_IMPORTED_MODULE_0__);
function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}
var av = Autodesk.Viewing;
var avp = av.Private;

var THUMBNAIL_SIZE = 200;



var ThumbnailListView = /*#__PURE__*/function () {

  function ThumbnailListView(container, rootNode, panel) {_classCallCheck(this, ThumbnailListView);

    this._parentDiv = container;
    this._rootNode = rootNode;
    this._panelRef = panel;
    this._requestNextThumbnail = this._requestNextThumbnail.bind(this);
    this._onThumbnailClick = this._onThumbnailClick.bind(this);
    this._selection = null;
  }_createClass(ThumbnailListView, [{ key: "initialize", value: function initialize()

    {

      this._container = document.createElement('div');
      this._container.style['text-align'] = 'center';

      this._pendingImage = [];
      this._mapping = {}; // Keeps a map from BubbleNode.guid() into the BubbleNode instance.
      var geometries = this._rootNode.search({ type: 'geometry' });
      for (var i = 0, len = geometries.length; i < len; ++i) {

        var bubbleNode = geometries[i];
        var _guid = bubbleNode.guid();

        if (!_guid)
        continue;

        var thumbnail = this._createThumbnail(bubbleNode);
        this._container.appendChild(thumbnail);
        this._pendingImage.push(bubbleNode);

        this._mapping[_guid] = {
          bubbleNode: bubbleNode,
          div: thumbnail };


      }

      this._container.addEventListener('click', this._onThumbnailClick);

      this._parentDiv.appendChild(this._container);
      window.requestAnimationFrame(this._requestNextThumbnail);
    } }, { key: "destroy", value: function destroy()

    {

      if (this._parentDiv) {
        this._parentDiv.removeChild(this._container);
        this._container.removeEventListener('click', this._onThumbnailClick);
        this._container = null;
        this._parentDiv = null;
      }

      this._selection = null;
      this._rootNode = null;
      this._panelRef = null;
      this._mapping = null;
    } }, { key: "isVisible", value: function isVisible()

    {
      return this._container.style.display !== 'none';
    } }, { key: "show", value: function show(

    visible) {
      this._container.style.display = visible ? '' : 'none';
      if (visible) {
        this._requestNextThumbnail(); // resume thumbnails (if any)
      }
    } }, { key: "setSelection", value: function setSelection(

    bubbleNodeList) {
      var bubbleNode = bubbleNodeList[0]; // TODO: Can do better
      var guid = bubbleNode.guid();
      var div = this._mapping[guid].div;
      this._selection = bubbleNode;

      // Iterate over all divs and update selection CSS
      for (var key in this._mapping) {
        var data = this._mapping[key];
        var bSelected = data.bubbleNode === bubbleNode;
        if (bSelected) {
          data.div.classList.add('viewer-ext-docbrowser-thumbnail-selected');
        } else {
          data.div.classList.remove('viewer-ext-docbrowser-thumbnail-selected');
        }
      }
    } }, { key: "scrollToSelection", value: function scrollToSelection()

    {
      if (!this._selection)
      return;
      // Get the div element
      var guid = this._selection.guid();
      var elem = this._mapping[guid].div;
      // Find scroll value and scroll
      var total = elem.offsetTop;
      elem = elem.parentNode;
      while (elem && elem != this._parentDiv) {
        total += elem.offsetTop;
        elem = elem.parentNode;
      }
      this._panelRef.scrollContainer.scrollTop = total;
    }

    /**
       * @private
       */ }, { key: "_onThumbnailClick", value: function _onThumbnailClick(
    event) {
      if (event.target === this._container)
      return;

      var guid;
      var target = event.target;
      do {
        guid = target.getAttribute('bubble-guid');
        target = target.parentElement;
      } while (target !== this._container && !guid);

      if (guid) {
        var bubbleNode = this._mapping[guid].bubbleNode;
        this._panelRef._tryLoad(bubbleNode);
      }
    }

    /**
       * Creates and returns a <div> containing a loading spinner and a label
       * showing the name associated to the bubbleNode.
       *
       * @private
       */ }, { key: "_createThumbnail", value: function _createThumbnail(
    bubbleNode) {

      // container
      var div = document.createElement('div');
      div.classList.add('viewer-ext-docbrowser-thumbnail');
      div.setAttribute('bubble-guid', bubbleNode.guid());
      div.style.width = THUMBNAIL_SIZE + 'px';
      div.style.height = THUMBNAIL_SIZE + 'px';

      // loading spinner
      var img = document.createElement('img');
      img.src = avp.getResourceUrl('res/ui/spinner.png');
      img.classList.add('viewer-ext-docbrowser-thumbnail-spinner');
      div.appendChild(img);

      // label
      var label = document.createElement('div');
      label.innerText = bubbleNode.name();
      label.classList.add('viewer-ext-docbrowser-thumbnail-label');
      div.appendChild(label);

      return div;
    }

    /**
       * @private
       */ }, { key: "_requestNextThumbnail", value: function _requestNextThumbnail()
    {var _this = this;

      if (this._requestingThumbnail)
      return;

      if (!this.isVisible())
      return;

      var bubbleNode = this._getNextThumbnailRequest();
      if (!bubbleNode)
      return;

      this._requestingThumbnail = true;
      av.Thumbnails.getUrlForBubbleNode(bubbleNode).
      then(function (srcUrl) {
        _this._onThumbnailUrlReady(srcUrl, bubbleNode);
      }).
      catch(function (err) {
        _this._onThumbnailUrlError(err, bubbleNode);
      });
    }

    /**
       * Returns a BubbleNode associated to a thumbnail <div> that is visible to 
       * the user and has not had its thumbnail fetched yet.
       *
       * @private
       */ }, { key: "_getNextThumbnailRequest", value: function _getNextThumbnailRequest()
    {
      // TODO: figure out which thumbnails are currently visible to the user
      // and return one of those.
      // If none are visible, then return any other thumbnail.
      return this._pendingImage.shift();
    }

    /**
       * Removes spinner and replaces it with the thumbnail image.
       * It then requests the next thumbnail.
       *
       * @private
       */ }, { key: "_onThumbnailUrlReady", value: function _onThumbnailUrlReady(
    srcUrl, bubbleNode) {

      // Check to see if the class has been destroyed.
      if (!this._mapping) {
        return;
      }

      var _guid = bubbleNode.guid();
      var nodeData = this._mapping[_guid];
      var thumbnail = nodeData.div;

      // Remove spinner
      var spinnerImg = thumbnail.querySelector('img');
      thumbnail.removeChild(spinnerImg);

      // Add thumbnail image
      var img = document.createElement('img');
      img.style.width = THUMBNAIL_SIZE + 'px';
      img.style.height = THUMBNAIL_SIZE + 'px';
      img.src = srcUrl;
      thumbnail.insertBefore(img, thumbnail.firstChild);

      // Next thumbnail
      this._requestingThumbnail = false;
      window.requestAnimationFrame(this._requestNextThumbnail);
    }

    /**
       * Removes spinner animation and replaces it with an error-thumbnail.
       * It then requests the next thumbnail.
       *
       * @private
       */ }, { key: "_onThumbnailUrlError", value: function _onThumbnailUrlError(
    err, bubbleNode) {

      // Check to see if the class has been destroyed.
      if (!this._mapping) {
        return;
      }

      var _guid = bubbleNode.guid();
      var nodeData = this._mapping[_guid];
      var thumbnail = nodeData.div;

      // Remove spinner
      var spinnerImg = thumbnail.querySelector('img');
      thumbnail.removeChild(spinnerImg);

      // Inform user that thumbnail is unavailable
      thumbnail.style['background-color'] = '#c5c2c2'; // TODO: Can do better

      // Next thumbnail
      this._requestingThumbnail = false;
      window.requestAnimationFrame(this._requestNextThumbnail);
    } }]);return ThumbnailListView;}();

/***/ }),

/***/ "./extensions/DocumentBrowser/TreeViewDelegate.js":
/*!********************************************************!*\
  !*** ./extensions/DocumentBrowser/TreeViewDelegate.js ***!
  \********************************************************/
/*! exports provided: createTreeViewDelegate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createTreeViewDelegate", function() { return createTreeViewDelegate; });

var TREE_VIEW_LEAF = 'leaf';
var TREE_VIEW_GROUP = 'group';

/**
                                * Creates a Tree delegate, used to render the Model Browser's Tree View.
                                */
function createTreeViewDelegate(rootNode, panel) {

  // Iterate through all BubbleNodes and identify which ones are
  // going to be displayed by the Tree view.
  var treeViewData = collectTreeViewData(rootNode);

  var delegate = new Autodesk.Viewing.UI.TreeDelegate();
  delegate.getTreeNodeId = function (node) {
    return node.guid();
  };
  delegate.getTreeNodeLabel = function (node) {
    // Just the name for now, but can display any info from the node.
    //
    return node.name() || node._raw().type;
  };
  delegate.getTreeNodeClass = function (node) {
    // Return the type of the node.  This way, in css, the designer can specify
    // custom styling per type like this:
    //
    // group.design > icon.collapsed {
    //    background: url("design_open.png") no-repeat;
    //
    // group.design > icon.expanded {
    //    background: url("design_open") no-repeat;
    //
    return node.isGeometry() ? node._raw().type + '_' + node._raw().role : node._raw().type;
  };
  delegate.isTreeNodeGroup = function (node) {

    var guid = node.guid();
    var nodeType = treeViewData[guid];
    return nodeType === TREE_VIEW_GROUP;

    // Folders and designs are currently what we consider groups.
    //
    var isManifest = node._raw().type === 'manifest'; // model-derivative support
    if (isManifest) return true;

    var isFolder = node._raw().type === 'folder';
    if (isFolder) return true;

    var isDesign = node._raw().type === 'design';
    if (isDesign) return true;

    var isView = node._raw().type == 'view';
    if (isView) return false;

    var isSvf = node._raw().outputType == 'svf';
    if (isSvf) return true;

    // For geometries, check and see if there are one or more views
    // If there is only one view, make sure the name is different than
    // the current geometry node (UX requirement).
    if (node.isGeometry()) {
      var views = node.search({ "type": "view" });
      if (views.length > 1)
      return true;

      if (views.length === 1) {

        // For 2D sheets don't show the view.
        if (views[0].is2D()) {
          return false;
        }

        // For 3D, show the view when the name is different than the geometry's.
        var sameName = node.name() === views[0].name();
        return !sameName; // it's not a group if they have the same name.
      }
    }

    return false;
  };
  delegate.shouldCreateTreeNode = function (node) {

    var guid = node.guid();
    var nodeType = treeViewData[guid];
    return !!nodeType;
  };
  delegate.onTreeNodeClick = function (tree, node, event) {
    panel._tryLoad(node);
  };
  delegate.createTreeNode = function (node, parent, options, type, depth) {
    var label = Autodesk.Viewing.UI.TreeDelegate.prototype.createTreeNode.call(this, node, parent, options);

    // Custom offset logic
    var offset = 10 + 15 * depth + (type === 'leaf' ? 15 : 0);
    parent.style.paddingLeft = offset + 'px';

    // Add icon representing geometry or sheet when appropriate.
    if (node.isGeometry()) {

      var geomTypeIcon = document.createElement('geom_icon'); // Refer to the CSS property

      // Insert after the existing <icon>
      label.parentElement.insertBefore(geomTypeIcon, label.parentElement.children[1]);

      // Reset for geometry elements.
      parent.style.paddingTop = '0';
    }

    return label;
  };
  delegate.getScrollContainer = function () {
    return panel.scrollContainer;
  };

  return delegate;
}

/**
   * Identifies all leaf nodes and then traverses-up all parents
   * and marks them to be shown by the Tree view.
   * 
   * @param {BubbleNode} rootNode 
   */
function collectTreeViewData(rootNode) {

  // Returns a map from guid into strings 'leaf' or 'group'
  var treeViewData = {};

  rootNode.traverse(function (node) {

    if (node.isGeometry()) {
      if (node.is2D() || node.is3D()) {
        exposeTreeLeaf(treeViewData, node);
      }
    }

    if (node.isViewPreset()) {
      // For Views contained in Geometries, check for multiple views.
      // If there is only one view, make sure the name is different than
      // the parent geometry node (UX requirement).
      var parent = node.parent;
      var views = parent.search({ "type": "view" });
      if (views.length > 1) {
        exposeTreeLeaf(treeViewData, node);
        return;
      } else
      if (views.length === 1) {

        // For 2D sheets don't show the view.
        if (views[0].is2D())
        return;

        // For 3D, show the view when the name is different than the geometry's.
        var sameName = node.name() === views[0].name();
        if (!sameName) {// it's not a group if they have the same name.
          exposeTreeLeaf(treeViewData, node);
        }
      }
    }
  });

  return treeViewData;
}


/**
   * @param {Object} treeViewData - Map from guid to string
   * @param {BubbleNode} node 
   */
function exposeTreeLeaf(treeViewData, node) {

  var guid = node.guid();
  treeViewData[guid] = TREE_VIEW_LEAF;

  var p = node.parent;
  while (p) {
    guid = p.guid();
    treeViewData[guid] = TREE_VIEW_GROUP;
    p = p.parent;
  }
}

/***/ }),

/***/ "./extensions/DocumentBrowser/index.js":
/*!*********************************************!*\
  !*** ./extensions/DocumentBrowser/index.js ***!
  \*********************************************/
/*! exports provided: DocumentBrowser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DocumentBrowser", function() { return DocumentBrowser; });
/* harmony import */ var _uiController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uiController */ "./extensions/DocumentBrowser/uiController.js");
function _typeof(obj) {if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};}return _typeof(obj);}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}function _possibleConstructorReturn(self, call) {if (call && (_typeof(call) === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}


var av = Autodesk.Viewing;

/**
                            * Adds a toolbar button that opens a Panel displaying all models
                            * and views available from the loaded Document. The panel allows
                            * navigating to any model referenced by the Document.
                            *
                            * The extension id is: `Autodesk.DocumentBrowser`
                            *
                            * @example
                            *   viewer.loadExtension('Autodesk.DocumentBrowser')
                            *
                            * @memberof Autodesk.Viewing.Extensions
                            * @alias Autodesk.Viewing.Extensions.DocumentBrowser
                            * @see {@link Autodesk.Viewing.Extension} for common inherited methods.
                            * @class
                            */

var DocumentBrowser = /*#__PURE__*/function (_av$Extension) {_inherits(DocumentBrowser, _av$Extension);

  function DocumentBrowser(viewer, options) {var _this;_classCallCheck(this, DocumentBrowser);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(DocumentBrowser).call(this, viewer, options));
    _this.onHyperlinkListener = _this.onHyperlinkListener.bind(_assertThisInitialized(_assertThisInitialized(_this)));return _this;
  }_createClass(DocumentBrowser, [{ key: "load", value: function load()

    {
      this.viewer.addEventListener(av.HYPERLINK_EVENT, this.onHyperlinkListener);
      // Extension does all its initialization as soon as the toolbar ui is present.
      return true;
    } }, { key: "unload", value: function unload()

    {
      if (this.ui) {
        this.ui.destroy();
        this.ui = null;
      }
      this.viewer.removeEventListener(av.HYPERLINK_EVENT, this.onHyperlinkListener);
      return true;
    } }, { key: "onHyperlinkListener", value: function onHyperlinkListener(

    event) {
      this._stashUI();
    } }, { key: "onToolbarCreated", value: function onToolbarCreated()

    {var _this2 = this;

      if (this.viewer.model) {
        this._hookToModel(this.viewer.model);
      } else {
        this.viewer.addEventListener(av.MODEL_ROOT_LOADED_EVENT, function (event) {
          _this2._hookToModel(event.model);
        }, { once: true });
      }
    }

    /**
       * Unloads the current model and then loads the next model in the Document.
       * It may reload the same model if the Document contains only 1 model.
       * @param {Object} [viewerConfig]
       * @param {Object} [loadOptions]
       * 
       * @alias Autodesk.Viewing.Extensions.DocumentBrowser#loadNextModel
       */ }, { key: "loadNextModel", value: function loadNextModel(
    viewerConfig, loadOptions) {
      if (!this.currNode) return;

      var index = this.geometries.indexOf(this.currNode);
      var nextIndex = (index + 1) % this.geometries.length;
      var nextNode = this.geometries[nextIndex];

      this.viewer.loadDocumentNode(this.rootNode.getDocument(), nextNode, loadOptions);
    }

    /**
       * Unloads the current model and then loads the previous model in the Document.
       * It may reload the same model if the Document contains only 1 model.
       * @param {Object} [viewerConfig]
       * @param {Object} [loadOptions]
       * 
       * @alias Autodesk.Viewing.Extensions.DocumentBrowser#loadPrevModel
       */ }, { key: "loadPrevModel", value: function loadPrevModel(
    viewerConfig, loadOptions) {
      if (!this.currNode) return;

      var index = this.geometries.indexOf(this.currNode);
      var prevIndex = index === 0 ? this.geometries.length - 1 : index - 1;
      var prevNode = this.geometries[prevIndex];

      this.viewer.loadDocumentNode(this.rootNode.getDocument(), prevNode, loadOptions);
    }


    /**
       * 
       * @param {Autodesk.Viewing.BubbleNode} bubbleNode
       * @returns {Promise} - Resolves when the model has been loaded.
       * @private
       */ }, { key: "_changeModel", value: function _changeModel(
    bubbleNode) {

      var rootNode = bubbleNode.getRootNode();

      var nextConfig = this.viewer.config;
      if (!Array.isArray(nextConfig.extensions)) {
        nextConfig.extensions = [];
      }
      if (nextConfig.extensions.indexOf('Autodesk.DocumentBrowser') === -1) {
        nextConfig.extensions.push('Autodesk.DocumentBrowser');
      }

      this._stashUI();

      return this.viewer.loadDocumentNode(rootNode.getDocument(), bubbleNode);
    }

    /**
       * @private
       */ }, { key: "_hookToModel", value: function _hookToModel(
    model) {
      var docNode = model.getDocumentNode();
      if (!docNode) return;

      this.currNode = docNode.findParentGeom2Dor3D();
      this.rootNode = docNode.getRootNode();
      this.geometries = this.rootNode.search({ 'type': 'geometry' });

      var cache = this.getCache();
      if (cache.ui) {
        this.ui = cache.ui;
        cache.ui = null;
      } else {
        this.ui = new _uiController__WEBPACK_IMPORTED_MODULE_0__["UiController"](this.viewer);
      }
      this.ui.createUi(this.currNode, this.options);
      this.ui.setChangeModelHandler(this._changeModel.bind(this));
    }

    /**
       * @private
       */ }, { key: "_stashUI", value: function _stashUI()
    {
      var cache = this.getCache();
      if (this.ui) {
        this.ui.notifyStash();
        cache.ui = this.ui;
        this.ui = null;
      }
    } }]);return DocumentBrowser;}(av.Extension);


av.theExtensionManager.registerExtension('Autodesk.DocumentBrowser', DocumentBrowser);

/***/ }),

/***/ "./extensions/DocumentBrowser/res/folder-16-active.svg":
/*!*************************************************************!*\
  !*** ./extensions/DocumentBrowser/res/folder-16-active.svg ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E %3Ctitle%3Efolder-16%3C/title%3E %3Cg id='assets'%3E %3Cg id='Layer_201' data-name='Layer%25201'%3E %3Cpath fill='%2300BFFF' d='M0,2.5V4H6.34l1-1-1-1H.5A.5.5,0,0,0,0,2.5ZM0,5v8a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V4a1,1,0,0,0-1-1H9L7,5Z'/%3E %3C/g%3E %3C/g%3E %3C/svg%3E\""

/***/ }),

/***/ "./extensions/DocumentBrowser/res/folder-16-dark.svg":
/*!***********************************************************!*\
  !*** ./extensions/DocumentBrowser/res/folder-16-dark.svg ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E %3Ctitle%3Efolder-16%3C/title%3E %3Cg id='assets'%3E %3Cg id='Layer_201' data-name='Layer%25201'%3E %3Cpath fill='%23F4F4F4' d='M0,2.5V4H6.34l1-1-1-1H.5A.5.5,0,0,0,0,2.5ZM0,5v8a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V4a1,1,0,0,0-1-1H9L7,5Z'/%3E %3C/g%3E %3C/g%3E %3C/svg%3E\""

/***/ }),

/***/ "./extensions/DocumentBrowser/res/folder-16-light.svg":
/*!************************************************************!*\
  !*** ./extensions/DocumentBrowser/res/folder-16-light.svg ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3E %3Ctitle%3Efolder-16%3C/title%3E %3Cg id='assets'%3E %3Cg id='Layer_201' data-name='Layer%25201'%3E %3Cpath fill='black' d='M0,2.5V4H6.34l1-1-1-1H.5A.5.5,0,0,0,0,2.5ZM0,5v8a1,1,0,0,0,1,1H14a1,1,0,0,0,1-1V4a1,1,0,0,0-1-1H9L7,5Z'/%3E %3C/g%3E %3C/g%3E %3C/svg%3E\""

/***/ }),

/***/ "./extensions/DocumentBrowser/res/icon-view-2d-dark.svg":
/*!**************************************************************!*\
  !*** ./extensions/DocumentBrowser/res/icon-view-2d-dark.svg ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\"data:image/svg+xml,%3C?xml version='1.0' encoding='UTF-8'?%3E %3Csvg width='24px' height='24px' viewBox='0 0 24 24' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E %3C!-- Generator: Sketch 43.2 (39069) - http://www.bohemiancoding.com/sketch --%3E %3Ctitle%3Eicon-view-2d%3C/title%3E %3Cdesc%3ECreated with Sketch.%3C/desc%3E %3Cdefs%3E%3C/defs%3E %3Cg id='Symbols' stroke='none' stroke-width='1' fill='%23C4C4C4' fill-rule='evenodd'%3E %3Cg id='icon-view-2d'%3E %3Cg id='guide' opacity='0' fill='%23FF9898'%3E %3Crect id='Rectangle-4' x='0' y='0' width='24' height='24'%3E%3C/rect%3E %3C/g%3E %3Cpath d='M13,15 L13,12 L16,12 L16,11 L17,11 L17,12.5 L17,16 L13.5,16 L12,16 L12,15 L13,15 Z' id='Combined-Shape' fill='%23C4C4C4'%3E%3C/path%3E %3Crect id='Rectangle-10-Copy-22' fill='%23C4C4C4' x='16' y='8' width='1' height='2'%3E%3C/rect%3E %3Cpath d='M4,16 L4,18 L20,18 L20,6 L17,6 L17,7 L16,7 L16,6 L4,6 L4,15 L5,15 L5,16 L4,16 Z M20.5,5 L21,5 L21,19 L20.5,19 L3,19 L3,18.5 L3,5.5 L3,5 L20.5,5 Z' id='Combined-Shape' fill='%23C4C4C4'%3E%3C/path%3E %3Crect id='Rectangle-10-Copy-26' fill='%23C4C4C4' x='16' y='14' width='1' height='2'%3E%3C/rect%3E %3Crect id='Rectangle-10-Copy-27' fill='%23C4C4C4' transform='translate(7.000000, 15.500000) rotate(-270.000000) translate(-7.000000, -15.500000) ' x='6.5' y='14.5' width='1' height='2'%3E%3C/rect%3E %3Crect id='Rectangle-10-Copy-28' fill='%23C4C4C4' transform='translate(10.000000, 15.500000) rotate(-270.000000) translate(-10.000000, -15.500000) ' x='9.5' y='14.5' width='1' height='2'%3E%3C/rect%3E %3Crect id='Rectangle-10-Copy-30' fill='%23C4C4C4' transform='translate(16.000000, 15.500000) rotate(-270.000000) translate(-16.000000, -15.500000) ' x='15.5' y='14.5' width='1' height='2'%3E%3C/rect%3E %3C/g%3E %3C/g%3E %3C/svg%3E\""

/***/ }),

/***/ "./extensions/DocumentBrowser/res/icon-view-2d-light.svg":
/*!***************************************************************!*\
  !*** ./extensions/DocumentBrowser/res/icon-view-2d-light.svg ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\"data:image/svg+xml,%3C?xml version='1.0' encoding='UTF-8'?%3E %3Csvg width='24px' height='24px' viewBox='0 0 24 24' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E %3C!-- Generator: Sketch 43.2 (39069) - http://www.bohemiancoding.com/sketch --%3E %3Ctitle%3Eicon-view-2d%3C/title%3E %3Cdesc%3ECreated with Sketch.%3C/desc%3E %3Cdefs%3E%3C/defs%3E %3Cg id='Symbols' stroke='none' stroke-width='1' fill='%23858585' fill-rule='evenodd'%3E %3Cg id='icon-view-2d'%3E %3Cg id='guide' opacity='0' fill='%23FF9898'%3E %3Crect id='Rectangle-4' x='0' y='0' width='24' height='24'%3E%3C/rect%3E %3C/g%3E %3Cpath d='M13,15 L13,12 L16,12 L16,11 L17,11 L17,12.5 L17,16 L13.5,16 L12,16 L12,15 L13,15 Z' id='Combined-Shape' fill='%23858585'%3E%3C/path%3E %3Crect id='Rectangle-10-Copy-22' fill='%23858585' x='16' y='8' width='1' height='2'%3E%3C/rect%3E %3Cpath d='M4,16 L4,18 L20,18 L20,6 L17,6 L17,7 L16,7 L16,6 L4,6 L4,15 L5,15 L5,16 L4,16 Z M20.5,5 L21,5 L21,19 L20.5,19 L3,19 L3,18.5 L3,5.5 L3,5 L20.5,5 Z' id='Combined-Shape' fill='%23858585'%3E%3C/path%3E %3Crect id='Rectangle-10-Copy-26' fill='%23858585' x='16' y='14' width='1' height='2'%3E%3C/rect%3E %3Crect id='Rectangle-10-Copy-27' fill='%23858585' transform='translate(7.000000, 15.500000) rotate(-270.000000) translate(-7.000000, -15.500000) ' x='6.5' y='14.5' width='1' height='2'%3E%3C/rect%3E %3Crect id='Rectangle-10-Copy-28' fill='%23858585' transform='translate(10.000000, 15.500000) rotate(-270.000000) translate(-10.000000, -15.500000) ' x='9.5' y='14.5' width='1' height='2'%3E%3C/rect%3E %3Crect id='Rectangle-10-Copy-30' fill='%23858585' transform='translate(16.000000, 15.500000) rotate(-270.000000) translate(-16.000000, -15.500000) ' x='15.5' y='14.5' width='1' height='2'%3E%3C/rect%3E %3C/g%3E %3C/g%3E %3C/svg%3E\""

/***/ }),

/***/ "./extensions/DocumentBrowser/res/icon-view-3d-dark.svg":
/*!**************************************************************!*\
  !*** ./extensions/DocumentBrowser/res/icon-view-3d-dark.svg ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\"data:image/svg+xml,%3C?xml version='1.0' encoding='UTF-8'?%3E %3Csvg width='24px' height='24px' viewBox='0 0 24 24' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E %3C!-- Generator: Sketch 43.1 (39012) - http://www.bohemiancoding.com/sketch --%3E %3Ctitle%3Eicon-view-3d%3C/title%3E %3Cdesc%3ECreated with Sketch.%3C/desc%3E %3Cdefs%3E%3C/defs%3E %3Cg id='Symbols' stroke='none' stroke-width='1' fill='%23C4C4C4' fill-rule='evenodd'%3E %3Cg id='icon-view-3d'%3E %3Cg id='guide' opacity='0' fill='%23FF9898'%3E %3Crect id='Rectangle-4' x='0' y='0' width='24' height='24'%3E%3C/rect%3E %3C/g%3E %3Cpath d='M12.5,5 L6.00480947,8.75 L6.00480947,16.25 L12.5,20 L18.9951905,16.25 L18.9951905,8.75 L12.5,5 Z M12.5,3.84529946 L19.9951905,8.17264973 L19.9951905,16.8273503 L12.5,21.1547005 L5.00480947,16.8273503 L5.00480947,8.17264973 L12.5,3.84529946 Z' id='Polygon' fill='%23C4C4C4' fill-rule='nonzero'%3E%3C/path%3E %3Cpolygon id='Line' fill='%23C4C4C4' fill-rule='nonzero' points='12 12 12 20.0588235 13 20.0588235 13 12'%3E%3C/polygon%3E %3Cpolygon id='Line' fill='%23C4C4C4' fill-rule='nonzero' points='5.64133837 9.15664034 12.6860521 13.182191 13.182191 12.3139479 6.13747731 8.2883972'%3E%3C/polygon%3E %3Cpolygon id='Line' fill='%23C4C4C4' fill-rule='nonzero' points='18.8625227 8.2883972 11.817809 12.3139479 12.3139479 13.182191 19.3586616 9.15664034'%3E%3C/polygon%3E %3C/g%3E %3C/g%3E %3C/svg%3E\""

/***/ }),

/***/ "./extensions/DocumentBrowser/res/icon-view-3d-light.svg":
/*!***************************************************************!*\
  !*** ./extensions/DocumentBrowser/res/icon-view-3d-light.svg ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\"data:image/svg+xml,%3C?xml version='1.0' encoding='UTF-8'?%3E %3Csvg width='24px' height='24px' viewBox='0 0 24 24' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E %3C!-- Generator: Sketch 43.1 (39012) - http://www.bohemiancoding.com/sketch --%3E %3Ctitle%3Eicon-view-3d%3C/title%3E %3Cdesc%3ECreated with Sketch.%3C/desc%3E %3Cdefs%3E%3C/defs%3E %3Cg id='Symbols' stroke='none' stroke-width='1' fill='%23858585' fill-rule='evenodd'%3E %3Cg id='icon-view-3d'%3E %3Cg id='guide' opacity='0' fill='%23FF9898'%3E %3Crect id='Rectangle-4' x='0' y='0' width='24' height='24'%3E%3C/rect%3E %3C/g%3E %3Cpath d='M12.5,5 L6.00480947,8.75 L6.00480947,16.25 L12.5,20 L18.9951905,16.25 L18.9951905,8.75 L12.5,5 Z M12.5,3.84529946 L19.9951905,8.17264973 L19.9951905,16.8273503 L12.5,21.1547005 L5.00480947,16.8273503 L5.00480947,8.17264973 L12.5,3.84529946 Z' id='Polygon' fill='%23858585' fill-rule='nonzero'%3E%3C/path%3E %3Cpolygon id='Line' fill='%23858585' fill-rule='nonzero' points='12 12 12 20.0588235 13 20.0588235 13 12'%3E%3C/polygon%3E %3Cpolygon id='Line' fill='%23858585' fill-rule='nonzero' points='5.64133837 9.15664034 12.6860521 13.182191 13.182191 12.3139479 6.13747731 8.2883972'%3E%3C/polygon%3E %3Cpolygon id='Line' fill='%23858585' fill-rule='nonzero' points='18.8625227 8.2883972 11.817809 12.3139479 12.3139479 13.182191 19.3586616 9.15664034'%3E%3C/polygon%3E %3C/g%3E %3C/g%3E %3C/svg%3E\""

/***/ }),

/***/ "./extensions/DocumentBrowser/uiController.css":
/*!*****************************************************!*\
  !*** ./extensions/DocumentBrowser/uiController.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader!./uiController.css */ "./node_modules/css-loader/index.js!./extensions/DocumentBrowser/uiController.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./extensions/DocumentBrowser/uiController.js":
/*!****************************************************!*\
  !*** ./extensions/DocumentBrowser/uiController.js ***!
  \****************************************************/
/*! exports provided: UiController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UiController", function() { return UiController; });
/* harmony import */ var _Panel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Panel */ "./extensions/DocumentBrowser/Panel.js");
/* harmony import */ var _uiController_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uiController.css */ "./extensions/DocumentBrowser/uiController.css");
/* harmony import */ var _uiController_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_uiController_css__WEBPACK_IMPORTED_MODULE_1__);
function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}




var avu = Autodesk.Viewing.UI;

var UiController = /*#__PURE__*/function () {

  function UiController(viewer) {_classCallCheck(this, UiController);
    this.viewer = viewer;
    this._onPanelVisibilityChange = this._onPanelVisibilityChange.bind(this);
  }_createClass(UiController, [{ key: "setChangeModelHandler", value: function setChangeModelHandler(

    changeModelFn) {
      this._changeModelFn = changeModelFn;
      this.panel && this.panel.setChangeModelHandler(changeModelFn);
    }

    /**
       * Creates the UI.
       * @param {Autodesk.Viewing.BubbleNode} currNode  - The node loaded into the Viewer
       * @param {Object} [options]
       * @param {bool} [options.openDocumentBrowserOnLoad=false] - Whether the panel is opened when the extension loads.
       */ }, { key: "createUi", value: function createUi(
    currNode, options) {

      this.currNode = currNode;
      this._addToolbarButton();

      if (!this.panel) {
        this.panel = new _Panel__WEBPACK_IMPORTED_MODULE_0__["Panel"](this.viewer, this.currNode);
        this.panel.setChangeModelHandler(this._changeModelFn);
        this.panel.addVisibilityListener(this._onPanelVisibilityChange);

        if (options && options.openDocumentBrowserOnLoad) {
          this.panel.toggleVisibility();
        }
      } else {
        // Some UI change to sync the selection status change triggered by hyperlink
        this.panel.setCurrentNode(currNode);
      }

      this._updateButtonState();
    }

    /**
       * Removes all the UI from the DOM.
       */ }, { key: "destroy", value: function destroy()
    {

      this._removeToolbarButton();
      if (this.panel) {
        this.panel.destroy();
        this.panel = null;
      }
    } }, { key: "togglePanel", value: function togglePanel()

    {
      this.panel.toggleVisibility();
    } }, { key: "notifyStash", value: function notifyStash()

    {
      this.toolbarButton = null; // Free the reference, the viewer will remove all buttons from toolbar.
    } }, { key: "_addToolbarButton", value: function _addToolbarButton()

    {var _this = this;

      if (!this.viewer.getToolbar) return;
      var toolbar = this.viewer.getToolbar();
      if (!toolbar) return;
      var modelTools = toolbar.getControl(Autodesk.Viewing.TOOLBAR.MODELTOOLSID);
      if (!modelTools) return;

      var button = new avu.Button('toolbar-documentModels');
      button.setIcon("adsk-icon-documentModels");
      button.setToolTip("Document Browser");
      modelTools.addControl(button);
      this.toolbarButton = button;

      button.onClick = function () {
        _this.togglePanel();
      };
    } }, { key: "_removeToolbarButton", value: function _removeToolbarButton()

    {
      if (!this.toolbarButton) return;
      this.toolbarButton.removeFromParent();
      this.toolbarButton = null;
    } }, { key: "_updateButtonState", value: function _updateButtonState()

    {
      if (!this.toolbarButton) return;
      var panelVisible = this.panel ? this.panel.isVisible() : false;
      this.toolbarButton.setState(panelVisible ? avu.Button.State.ACTIVE : avu.Button.State.INACTIVE);
    } }, { key: "_onPanelVisibilityChange", value: function _onPanelVisibilityChange()

    /*event*/{
      this._updateButtonState();
    } }]);return UiController;}();

/***/ }),

/***/ "./node_modules/css-loader/index.js!./extensions/DocumentBrowser/Panel.css":
/*!************************************************************************!*\
  !*** ./node_modules/css-loader!./extensions/DocumentBrowser/Panel.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__(/*! ../../node_modules/css-loader/lib/url/escape.js */ "./node_modules/css-loader/lib/url/escape.js");
exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "/**\n * Geometry icons, we have 2 of them:\n  * - A cube for 3D geometries\n  * - A tileset-thingy for 2D sheets\n */\n.adsk-viewing-viewer  leaf > lmvheader > geom_icon,\n.adsk-viewing-viewer group > lmvheader > geom_icon {\n    display: inline-block;\n    background-repeat: no-repeat;\n    width: 24px;\n    height: 24px;\n    padding-left: 5px;\n    transform: translateY(6px);\n}\n\n\n.adsk-viewing-viewer .viewer-document-browser .settings-tabs ul li,\n.adsk-viewing-viewer .viewer-document-browser .settings-tabs ul li a {\n    width: 50%;\n}\n\n\n/**\n * DARK THEME\n */\n.adsk-viewing-viewer.dark-theme  leaf.geometry_3d > lmvheader > geom_icon,\n.adsk-viewing-viewer.dark-theme group.geometry_3d > lmvheader > geom_icon {\n    background-image: url(" + escape(__webpack_require__(/*! ./res/icon-view-3d-dark.svg */ "./extensions/DocumentBrowser/res/icon-view-3d-dark.svg")) + ");\n}\n\n.adsk-viewing-viewer.dark-theme  leaf.geometry_2d > lmvheader > geom_icon,\n.adsk-viewing-viewer.dark-theme group.geometry_2d > lmvheader > geom_icon {\n    background-image: url(" + escape(__webpack_require__(/*! ./res/icon-view-2d-dark.svg */ "./extensions/DocumentBrowser/res/icon-view-2d-dark.svg")) + ");\n}\n\n.adsk-viewing-viewer.dark-theme .mb-ext-tab-bar {\n    background-color: rgba(34, 34, 34, 0.9);\n    text-align: center;\n}\n\n.adsk-viewing-viewer.dark-theme .mb-ext-tab-bar-btn {\n    width: 40%;\n    height: 60%;\n    margin: auto;\n}\n\n/**\n * LIGHT THEME\n */\n.adsk-viewing-viewer.light-theme  leaf.geometry_3d > lmvheader > geom_icon,\n.adsk-viewing-viewer.light-theme group.geometry_3d > lmvheader > geom_icon {\n    background-image: url(" + escape(__webpack_require__(/*! ./res/icon-view-3d-light.svg */ "./extensions/DocumentBrowser/res/icon-view-3d-light.svg")) + ");\n}\n\n.adsk-viewing-viewer.light-theme  leaf.geometry_2d > lmvheader > geom_icon,\n.adsk-viewing-viewer.light-theme group.geometry_2d > lmvheader > geom_icon {\n    background-image: url(" + escape(__webpack_require__(/*! ./res/icon-view-2d-light.svg */ "./extensions/DocumentBrowser/res/icon-view-2d-light.svg")) + ");\n}\n\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./extensions/DocumentBrowser/ThumbnailList.css":
/*!********************************************************************************!*\
  !*** ./node_modules/css-loader!./extensions/DocumentBrowser/ThumbnailList.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".viewer-ext-docbrowser-thumbnail {\n    border: 1px solid black;\n    background-color: #e8e8e8;\n    margin: 6px auto;\n    cursor: pointer;\n}\n\n.viewer-ext-docbrowser-thumbnail-selected {\n    border: solid 3px #1dc7f3;\n    border-radius: 4px;\n}\n\n/* the label */\n.viewer-ext-docbrowser-thumbnail-selected > div {\n    background-color: #1dc7f3;\n    color: black;\n}\n\n/* hide label when hovering image */\n.viewer-ext-docbrowser-thumbnail:hover > div {\n    opacity: 0;\n}\n\n.viewer-ext-docbrowser-thumbnail-spinner {\n    animation: loading-spinner-perpetual-motion 1s infinite linear; /* from styles.css */\n    margin: 65px auto;\n    width: 60px;\n}\n\n.viewer-ext-docbrowser-thumbnail-label {\n    background: #c7c7d4;\n    color: #0a131c;\n    position: relative;\n    transform: translate(0,-100%);\n    bottom: 5px;\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js!./extensions/DocumentBrowser/uiController.css":
/*!*******************************************************************************!*\
  !*** ./node_modules/css-loader!./extensions/DocumentBrowser/uiController.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__(/*! ../../node_modules/css-loader/lib/url/escape.js */ "./node_modules/css-loader/lib/url/escape.js");
exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.adsk-viewing-viewer .adsk-icon-documentModels {\n    background-repeat: no-repeat !important;\n    background-size: 80% !important;\n    margin-left: 4px;\n    margin-top: 3px;\n}\n\n/**\n * DARK THEME\n */\n.adsk-viewing-viewer.dark-theme .adsk-icon-documentModels {\n    background: url(" + escape(__webpack_require__(/*! ./res/folder-16-dark.svg */ "./extensions/DocumentBrowser/res/folder-16-dark.svg")) + ");\n}\n.adsk-viewing-viewer.dark-theme .adsk-icon-documentModels:hover,\n.adsk-viewing-viewer.dark-theme .active .adsk-icon-documentModels {\n    background: url(" + escape(__webpack_require__(/*! ./res/folder-16-active.svg */ "./extensions/DocumentBrowser/res/folder-16-active.svg")) + ");\n}\n\n/**\n * LIGHT THEME\n */\n.adsk-viewing-viewer.light-theme .adsk-icon-documentModels {\n    background: url(" + escape(__webpack_require__(/*! ./res/folder-16-light.svg */ "./extensions/DocumentBrowser/res/folder-16-light.svg")) + ");\n}\n.adsk-viewing-viewer.light-theme .adsk-icon-documentModels:hover,\n.adsk-viewing-viewer.light-theme .active .adsk-icon-documentModels {\n    background: url(" + escape(__webpack_require__(/*! ./res/folder-16-active.svg */ "./extensions/DocumentBrowser/res/folder-16-active.svg")) + ");\n}", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ "./node_modules/css-loader/lib/url/escape.js":
/*!***************************************************!*\
  !*** ./node_modules/css-loader/lib/url/escape.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function escape(url) {
    if (typeof url !== 'string') {
        return url
    }
    // If url is already wrapped in quotes, remove them
    if (/^['"].*['"]$/.test(url)) {
        url = url.slice(1, -1);
    }
    // Should url be wrapped?
    // See https://drafts.csswg.org/css-values-3/#urls
    if (/["'() \t\n]/.test(url)) {
        return '"' + url.replace(/"/g, '\\"').replace(/\n/g, '\\n') + '"'
    }

    return url
}


/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ })

/******/ });
//# sourceMappingURL=DocumentBrowser.js.map
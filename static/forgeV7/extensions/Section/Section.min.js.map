{"version":3,"sources":["webpack://Autodesk.Extensions.[name]/webpack/bootstrap","webpack://Autodesk.Extensions.[name]/./node_modules/css-loader/lib/css-base.js","webpack://Autodesk.Extensions.[name]/./node_modules/style-loader/lib/addStyles.js","webpack://Autodesk.Extensions.[name]/./extensions/Section/Section.css?8a9c","webpack://Autodesk.Extensions.[name]/./extensions/Section/Section.css","webpack://Autodesk.Extensions.[name]/./node_modules/style-loader/lib/urls.js","webpack://Autodesk.Extensions.[name]/./thirdparty/three.js/TransformControls.js","webpack://Autodesk.Extensions.[name]/./extensions/Section/SectionTool.js","webpack://Autodesk.Extensions.[name]/./extensions/Section/Section.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","push","stylesInDom","isOldIE","fn","memo","apply","arguments","memoize","window","document","all","atob","getElement","target","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","transform","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","cssNode","childNodes","hmr","locals","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","init_TransformGizmos","GizmoMaterial","parameters","THREE","MeshBasicMaterial","depthTest","depthWrite","side","FrontSide","transparent","setValues","oldColor","color","clone","oldOpacity","opacity","highlight","highlighted","setRGB","copy","GizmoLineMaterial","LineBasicMaterial","linewidth","PolyhedronGeometry","vertices","indices","radius","detail","Geometry","that","prepare","Vector3","faces","v1","v2","v3","Face3","centroid","subdivide","faceVertexUvs","uvs","x0","x","x1","x2","max","Math","min","multiplyScalar","vector","vertex","normalize","u","azimuth","PI","v","atan2","y","sqrt","z","inclination","uv","Vector2","make","face","add","divideScalar","azi","correctUV","cols","pow","a","b","aj","lerp","bj","rows","k","floor","mergeVertices","computeFaceNormals","boundingSphere","Sphere","OctahedronGeometry","TorusGeometry","tube","radialSegments","tubularSegments","arc","center","normals","cos","sin","sub","createCircleGeometry","facing","geometry","createArrowGeometry","radiusTop","radiusBottom","height","heightSegments","openEnded","arrowGeometry","mesh","Mesh","CylinderGeometry","position","updateMatrix","merge","matrix","createLineGeometry","axis","lineGeometry","TransformGizmo","scope","init","Object3D","handles","pickers","planes","highlights","hemiPicker","subPickers","planeGeometry","PlaneBufferGeometry","planeMaterial","wireframe","DoubleSide","XY","YZ","XZ","XYZE","activePlane","rotation","set","visible","setupGizmos","activeMode","traverse","child","tempGeometry","BufferGeometry","fromBufferGeometry","scale","hide","show","material","addGizmos","gizmoMap","visble","setHandlePickerGizmos","handleGizmos","pickerGizmos","highlightGizmos","hemiPickerGizmos","subPickerGizmos","eye","vec1","vec2","lookAtMatrix","Matrix4","search","quaternion","setFromRotationMatrix","lookAt","setFromEuler","TransformGizmoTranslate","lineXGeometry","lineYGeometry","lineZGeometry","X","Line","Y","Z","XYZ","BoxGeometry","setActivePlane","tempMatrix","applyMatrix4","getInverse","extractRotation","matrixWorld","abs","TransformGizmoRotate","RX","RY","RZ","RE","RXYZE","eye2","worldRotation","Euler","tempQuaternion","Quaternion","unitX","unitY","unitZ","quaternionX","quaternionY","quaternionZ","makeRotationFromQuaternion","setFromAxisAngle","multiplyQuaternions","TransformGizmoTranslateRotate","theta","SphereGeometry","useAllPickers","TransformGizmoScale","TransformControls","camera","domElement","gizmo","snap","snapDelta","space","size","normal","startLine","endLine","LineDashedMaterial","centerLine","ImageUtils","loadTexture","Autodesk","Viewing","Private","getResourceUrl","magFilter","minFilter","NearestFilter","CircleGeometry","centerMark","ticks","h","_dragging","_mode","changeEvent","mouseDownEvent","mouseUpEvent","objectChangeEvent","point","Raycaster","offset","offsetRotation","clientScale","tempVector","projX","projY","projZ","quaternionXYZ","quaternionE","oldPosition","oldScale","oldRotationMatrix","parentRotationMatrix","parentScale","worldPosition","worldRotationMatrix","camPosition","intersectObjects","pointer","objects","canvasX","canvasY","attach","updateUnitVectors","detach","setMode","dispatchEvent","getPicker","children","setPosition","setNormal","setFromUnitVectors","applyQuaternion","multiply","setSnap","delta","setSize","setSpace","updateMatrixWorld","setFromMatrixPosition","applyEuler","isPerspective","dist","distanceTo","tan","fov","top","bottom","rect","getBoundingClientRect","gizmoOffset","setGizmoOffset","vec","showRotationGizmos","onPointerHover","event","intersect","onPointerDown","pointerType","button","planeIntersect","setFromMatrixScale","verticesNeedUpdate","pos","getAttribute","pt1","fromAttribute","pt2","pt3","pt4","dashSize","gapSize","computeLineDistances","onPointerMove","dot","rotz","rotsnap","round","tempAxis","cross","rot","angleTo","projx","projy","projz","tempx","tempy","tempz","rotx","roty","matrixAutoUpdate","onPointerUp","pointerVector","pointerDir","ray","clientX","clientY","recursive","clientWidth","clientHeight","unproject","transformDirection","intersections","SectionMeshClass","SectionTool","viewer","_transRotControl","_transControl","_trcOffset","_viewer","impl","_names","_active","_isDragging","_boxChanged","_isPlaneOn","_tintColor","tintColor","_tintIntensity","tintIntensity","_sectionGroups","_sectionPlanes","_sectionPicker","_activeMode","_overlayName","_touchType","_initialized","_visibleAtFirst","_outlineIndices","_selectionOpacity","_selectionColor","updateViewer","invalidate","updateControls","updateSections","updatePlaneMeshes","updateCapMeshes","Plane","setComponents","w","plane","planeVec","Vector4","constant","connectivity","outlines","constructor","getWorldPosition","init_SectionMesh","_fragIterator","_timeSlice","_sliceDelay","_callback","_models","_curModel","_instanceTree","_m","_d","_f","_capTimer","_dbIds","_fragIds","reset","models","clearTimeout","doIteration","endTime","performance","now","next","setTimeout","nextModel","getInstanceTree","enumNodeChildren","getRootId","dbId","nextDbId","isNodeHidden","isNodeOff","enumNodeFragments","fragId","start","delay","callback","cg","Extensions","CompGeom","oldsection","sceneAfter","getObjectByName","section","section3D","section2D","avp","toPlaneCoords","makePlaneBasis","fromPaneCoords","mat2dname","matman","create2DMaterial","skipCircles","skipEllipticals","isScreenSpace","mat2d","findMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","cutplanes","_otherCutPlanes","box","Box3","modelQueue","getModels","intersects","model","lastFrag","frags","getFragmentList","getWorldBounds","xBoxPlane","getVizmesh","is2d","isLines","xMeshPlane","bbox","convertToPlaneCoords","vbb","VertexBufferBuilder","Color","getDiffuseColor","g","eset","EdgeSet","snapEdges","sanitizeEdges","stitchContours","cset","triangulate","contours","cntr","pts","addSegment","mdata","toMesh","BufferGeometryUtils","meshToGeometry","bg2d","streamingDraw","streamingIndex","mesh2d","frustumCulled","modelId","triangulationFailed","bg","toPolygonMesh","packedNormals","mat","cloneMaterial","bumpMap","normalMap","alphaMap","specularMap","hatchPattern","needsUpdate","angle","hatchParams","hatchTintColor","hatchTintIntensity","prismType","defines","toUpperCase","capmesh","_ownCutPlaneSet","setCutPlaneSetFor2DRendering","createPlaneMesh","quat","ptMax","projectPoint","ptMin","invQuat","inverse","subVectors","getVisibleBounds","getBoundingSphere","pt","presetIndex","currentLightPreset","bgColor","LightPresets","bgColorGradient","lineMaterial","fromArray","array","itemSize","line","rebuild","traverseSections","minv","connect","intersectPlanes","setXYZ","computeBoundingBox","computeBoundingSphere","setSectionPlanes","fireEvent","setCutPlaneSet","showPlane","showSection","attachControl","control","checkNormal","api","navigation","getEyeVector","negate","setPlane","distance","group","Group","addOverlay","centerPlaneArrow","centerOffset","middle","boundingBox","localToWorld","getCenterPoint","Matrix3","n23","n31","n12","plane1","plane2","plane3","optionalTarget","det","determinant","crossVectors","isActive","getSectionDistance","eyeVec","hit","rayIntersect","Ray","intersectPoint","setViewerSection","clearSection","planeSet","getCutPlaneSet","v4","setSection","connectivities","obbox","loadingBox","meshes","orthoPoint","ct","cornerOffset","setBox","recomputePivot","setSectionFromPlane","cutplane","setActiveMode","pop","removeOverlay","isPlaneOn","resetSection","getNames","getName","register","deregister","removeEventListener","removeOverlayScene","CAMERA_CHANGE_EVENT","ISOLATE_EVENT","HIDE_EVENT","SHOW_EVENT","getPriority","activate","canvas","addEventListener","overlayScenes","createOverlayScene","deactivate","handleSingleClick","handleDoubleClick","handleSingleTap","handleDoubleTap","handleKeyDown","handleKeyUp","handleWheelInput","handleButtonDown","handleButtonUp","handleMouseMove","oldTransControlPos","boxOffset","handleGesture","handleBlur","handleResize","handlePressHold","values","getSectionBoxValues","aabb","sectionBox","setPivotPoint","ignoreGlobalOffset","right","front","left","bttm","back","off","getData","globalOffset","sectionBoxTransform","identity","toArray","getSectionPlaneValues","sectionPlane","getSectionPlaneSet","getSectionPlanes","cp","_toConsumableArray","notifyCutplanesChanged","numCutPlanesBefore","cpSets","getCutPlaneSets","cpName","includes","updateCapMaterials","setSectionBox","SceneMath","box2CutPlanes","setSectionPlane","planeVecs","__webpack_exports__","SectionExtension","Extension","modes","onViewerSetView","onCutPlanesChangedBinded","onCutPlanesChanged","proto","load","tool","toolController","registerTool","sectionStyle","supportedStyles","SET_VIEW_EVENT","CUTPLANES_CHANGE_EVENT","HOTKEYS_ID","hotkeys","keycodes","KeyCode","ESCAPE","onRelease","getHotkeyManager","pushHotkeys","loadExtension","unload","popHotkeys","destroyUI","deregisterTool","toggle","enableSectionTool","setSectionStyle","getSectionStyle","preserveSection","bActive","bNewStyle","prevLock","setIsLocked","enable","activateTool","sectionToolButton","setState","UI","Button","State","ACTIVE","deactivateTool","INACTIVE","getViewValues","boxValues","planeValues","getState","viewerState","restoreState","immediate","activeStatus","clearSelection","onToolbarCreated","toolbar","AVU","ComboButton","setToolTip","setIcon","createSubmenu","modelTools","getControl","TOOLBAR","MODELTOOLSID","resetTool","addControl","getId","parentButton","createNavToggler","state","isMobileDevice","sectionXButton","onClick","sectionYButton","sectionZButton","sectionBoxButton","GEOMETRY_LOADED_EVENT","updateSectionButtons","areVectorsEqual","sqtol","lengthSq","unitx","unity","unitz","autocam","getWorldRightVector","up","getWorldUpVector","getWorldFrontVector","removeFromParent","theExtensionManager","registerExtension"],"mappings":"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","file":"Section/Section.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 375);\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./Section.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./Section.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./Section.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Section CSS\\n **/\\n.sectionPanel {\\n    line-height: 14px;\\n    text-align: left;\\n    z-index: 10;\\n}\\n\\n.section-horizontal-divider\\n{\\n    height: 1px;\\n    border-top: 1px solid rgba(200,200,200,0.8);\\n}\\n\\n.section-submenu-select\\n{\\n    display: block;\\n    position: relative;\\n    width: calc(100% - 40px);\\n    padding: 10px 20px 0px 20px;\\n    opacity: 0.3;\\n}\\n\\n.section-panel:hover .section-submenu-select {\\n   opacity: 0.8;\\n}\\n\\n.section-submenu-selectlabel\\n{\\n    position: relative;\\n    display:  inline-block;\\n    padding-right:  20px;\\n    padding-bottom:  4px;\\n}\\n\\n.section-restart {\\n    margin: 10px 20px 15px 20px;\\n    padding: 6px 10px 6px 10px;\\n    width: calc(100% - 55px);\\n    cursor: pointer;\\n}\\n\\n.docking-panel:hover .section-restart {\\n    background-color: rgba(255,255,255, .12);\\n}\\n\\n.docking-panel .section-restart:hover {\\n    background-color: rgba(166,194,255, 0.7);\\n    -webkit-transition: all 0.2s ease;\\n    -moz-transition: all 0.2s ease;\\n    -ms-transition: all 0.2s ease;\\n    -o-transition: all 0.2s ease;\\n    transition: all 0.2s ease;\\n}\\n\\n\", \"\"]);\n\n// exports\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/**\n * @author arodic / https://github.com/arodic\n *\n * @author chiena -- Modified for Autodesk LMV web viewer\n */\n /*jshint sub:true*/\n\nexport function init_TransformGizmos() {\n\n    'use strict';\n\n    var GizmoMaterial = function ( parameters ) {\n\n        THREE.MeshBasicMaterial.call( this );\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.side = THREE.FrontSide;\n        this.transparent = true;\n\n        this.setValues( parameters );\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function( highlighted ) {\n\n            if ( highlighted ) {\n\n                this.color.setRGB( 1, 230/255, 3/255 );\n                this.opacity = 1;\n\n            } else {\n\n                this.color.copy( this.oldColor );\n                this.opacity = this.oldOpacity;\n\n            }\n\n        };\n\n    };\n\n    GizmoMaterial.prototype = Object.create( THREE.MeshBasicMaterial.prototype );\n\n    var GizmoLineMaterial = function ( parameters ) {\n\n        THREE.LineBasicMaterial.call( this );\n\n        this.depthTest = false;\n        this.depthWrite = false;\n        this.transparent = true;\n        this.linewidth = 1;\n\n        this.setValues( parameters );\n\n        this.oldColor = this.color.clone();\n        this.oldOpacity = this.opacity;\n\n        this.highlight = function( highlighted ) {\n\n            if ( highlighted ) {\n\n                this.color.setRGB( 1, 230/255, 3/255 );\n                this.opacity = 1;\n\n            } else {\n\n                this.color.copy( this.oldColor );\n                this.opacity = this.oldOpacity;\n\n            }\n\n        };\n\n    };\n\n    GizmoLineMaterial.prototype = Object.create( THREE.LineBasicMaterial.prototype );\n\n    // polyfill\n    if (THREE.PolyhedronGeometry === undefined) {\n        THREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\n\n            THREE.Geometry.call( this );\n\n            this.type = 'PolyhedronGeometry';\n\n            this.parameters = {\n                vertices: vertices,\n                indices: indices,\n                radius: radius,\n                detail: detail\n            };\n\n            radius = radius || 1;\n            detail = detail || 0;\n\n            var that = this;\n\n            for ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n                prepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n            }\n\n            var midpoints = [], p = this.vertices;\n\n            var faces = [];\n\n            for ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n                var v1 = p[ indices[ i     ] ];\n                var v2 = p[ indices[ i + 1 ] ];\n                var v3 = p[ indices[ i + 2 ] ];\n\n                faces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\n            }\n\n            var centroid = new THREE.Vector3();\n\n            for ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n                subdivide( faces[ i ], detail );\n\n            }\n\n\n            // Handle case when face straddles the seam\n\n            for ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n                var uvs = this.faceVertexUvs[ 0 ][ i ];\n\n                var x0 = uvs[ 0 ].x;\n                var x1 = uvs[ 1 ].x;\n                var x2 = uvs[ 2 ].x;\n\n                var max = Math.max( x0, Math.max( x1, x2 ) );\n                var min = Math.min( x0, Math.min( x1, x2 ) );\n\n                if ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\n\n                    if ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n                    if ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n                    if ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n                }\n\n            }\n\n\n            // Apply radius\n\n            for ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n                this.vertices[ i ].multiplyScalar( radius );\n\n            }\n\n\n            // Merge vertices\n\n            this.mergeVertices();\n\n            this.computeFaceNormals();\n\n            this.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\n\n\n            // Project vector onto sphere's surface\n\n            function prepare( vector ) {\n\n                var vertex = vector.normalize().clone();\n                vertex.index = that.vertices.push( vertex ) - 1;\n\n                // Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n                var u = azimuth( vector ) / 2 / Math.PI + 0.5;\n                var v = inclination( vector ) / Math.PI + 0.5;\n                vertex.uv = new THREE.Vector2( u, 1 - v );\n\n                return vertex;\n\n            }\n\n\n            // Approximate a curved face with recursively sub-divided triangles.\n\n            function make( v1, v2, v3 ) {\n\n                var face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n                that.faces.push( face );\n\n                centroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n                var azi = azimuth( centroid );\n\n                that.faceVertexUvs[ 0 ].push( [\n                    correctUV( v1.uv, v1, azi ),\n                    correctUV( v2.uv, v2, azi ),\n                    correctUV( v3.uv, v3, azi )\n                ] );\n\n            }\n\n\n            // Analytically subdivide a face to the required detail level.\n\n            function subdivide( face, detail ) {\n\n                var cols = Math.pow(2, detail);\n                var cells = Math.pow(4, detail);\n                var a = prepare( that.vertices[ face.a ] );\n                var b = prepare( that.vertices[ face.b ] );\n                var c = prepare( that.vertices[ face.c ] );\n                var v = [];\n\n                // Construct all of the vertices for this subdivision.\n\n                for ( var i = 0 ; i <= cols; i ++ ) {\n\n                    v[ i ] = [];\n\n                    var aj = prepare( a.clone().lerp( c, i / cols ) );\n                    var bj = prepare( b.clone().lerp( c, i / cols ) );\n                    var rows = cols - i;\n\n                    for ( var j = 0; j <= rows; j ++) {\n\n                        if ( j == 0 && i == cols ) {\n\n                            v[ i ][ j ] = aj;\n\n                        } else {\n\n                            v[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n                        }\n\n                    }\n\n                }\n\n                // Construct all of the faces.\n\n                for ( var i = 0; i < cols ; i ++ ) {\n\n                    for ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\n\n                        var k = Math.floor( j / 2 );\n\n                        if ( j % 2 == 0 ) {\n\n                            make(\n                                v[ i ][ k + 1],\n                                v[ i + 1 ][ k ],\n                                v[ i ][ k ]\n                            );\n\n                        } else {\n\n                            make(\n                                v[ i ][ k + 1 ],\n                                v[ i + 1][ k + 1],\n                                v[ i + 1 ][ k ]\n                            );\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n\n            // Angle around the Y axis, counter-clockwise when looking from above.\n\n            function azimuth( vector ) {\n\n                return Math.atan2( vector.z, - vector.x );\n\n            }\n\n\n            // Angle above the XZ plane.\n\n            function inclination( vector ) {\n\n                return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n            }\n\n\n            // Texture fixing helper. Spheres have some odd behaviours.\n\n            function correctUV( uv, vector, azimuth ) {\n\n                if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\n                if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n                return uv.clone();\n\n            }\n\n        };\n\n        THREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n    }\n\n    // polyfill\n    if (THREE.OctahedronGeometry === undefined) {\n        THREE.OctahedronGeometry = function ( radius, detail ) {\n\n            this.parameters = {\n                radius: radius,\n                detail: detail\n            };\n\n            var vertices = [\n                1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0,- 1, 0,    0, 0, 1,    0, 0,- 1\n            ];\n\n            var indices = [\n                0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n            ];\n\n            THREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n            this.type = 'OctahedronGeometry';\n\n            this.parameters = {\n                radius: radius,\n                detail: detail\n            };\n        };\n\n        THREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\n    }\n\n    // polyfill\n    if (THREE.TorusGeometry === undefined) {\n        THREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\n\n            THREE.Geometry.call( this );\n\n            this.type = 'TorusGeometry';\n\n            this.parameters = {\n                radius: radius,\n                tube: tube,\n                radialSegments: radialSegments,\n                tubularSegments: tubularSegments,\n                arc: arc\n            };\n\n            radius = radius || 100;\n            tube = tube || 40;\n            radialSegments = radialSegments || 8;\n            tubularSegments = tubularSegments || 6;\n            arc = arc || Math.PI * 2;\n\n            var center = new THREE.Vector3(), uvs = [], normals = [];\n\n            for ( var j = 0; j <= radialSegments; j ++ ) {\n\n                for ( var i = 0; i <= tubularSegments; i ++ ) {\n\n                    var u = i / tubularSegments * arc;\n                    var v = j / radialSegments * Math.PI * 2;\n\n                    center.x = radius * Math.cos( u );\n                    center.y = radius * Math.sin( u );\n\n                    var vertex = new THREE.Vector3();\n                    vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n                    vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n                    vertex.z = tube * Math.sin( v );\n\n                    this.vertices.push( vertex );\n\n                    uvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\n                    normals.push( vertex.clone().sub( center ).normalize() );\n\n                }\n\n            }\n\n            for ( var j = 1; j <= radialSegments; j ++ ) {\n\n                for ( var i = 1; i <= tubularSegments; i ++ ) {\n\n                    var a = ( tubularSegments + 1 ) * j + i - 1;\n                    var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n                    var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n                    var d = ( tubularSegments + 1 ) * j + i;\n\n                    var face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\n                    this.faces.push( face );\n                    this.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\n\n                    face = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\n                    this.faces.push( face );\n                    this.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\n\n                }\n\n            }\n\n            this.computeFaceNormals();\n\n        };\n\n        THREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\n    }\n\n    var createCircleGeometry = function ( radius, facing, arc ) {\n\n        var geometry = new THREE.Geometry();\n        arc = arc ? arc : 1;\n        for ( var i = 0; i <= 64 * arc; ++i ) {\n            if ( facing == 'x' ) geometry.vertices.push( new THREE.Vector3( 0, Math.cos( i / 32 * Math.PI ), Math.sin( i / 32 * Math.PI ) ).multiplyScalar(radius) );\n            if ( facing == 'y' ) geometry.vertices.push( new THREE.Vector3( Math.cos( i / 32 * Math.PI ), 0, Math.sin( i / 32 * Math.PI ) ).multiplyScalar(radius) );\n            if ( facing == 'z' ) geometry.vertices.push( new THREE.Vector3( Math.sin( i / 32 * Math.PI ), Math.cos( i / 32 * Math.PI ), 0 ).multiplyScalar(radius) );\n        }\n\n        return geometry;\n    };\n\n    var createArrowGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) {\n\n        var arrowGeometry = new THREE.Geometry();\n        var mesh = new THREE.Mesh( new THREE.CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded ) );\n        mesh.position.y = 0.5;\n        mesh.updateMatrix();\n\n        arrowGeometry.merge( mesh.geometry, mesh.matrix );\n\n        return arrowGeometry;\n    };\n\n    var createLineGeometry = function ( axis ) {\n\n        var lineGeometry = new THREE.Geometry();\n        if ( axis === 'X') \n            lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 1, 0, 0 ) );\n        else if ( axis === 'Y' ) \n            lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\n        else if ( axis === 'Z' )\n            lineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 0, 1 ) );\n\n        return lineGeometry;\n    };\n\n    THREE.TransformGizmo = function () {\n\n        var scope = this;\n        var showPickers = false; //debug\n        var showActivePlane = false; //debug\n\n        this.init = function () {\n\n            THREE.Object3D.call( this );\n\n            this.handles = new THREE.Object3D();\n            this.pickers = new THREE.Object3D();\n            this.planes = new THREE.Object3D();\n            this.highlights = new THREE.Object3D();\n            this.hemiPicker = new THREE.Object3D();\n            this.subPickers = new THREE.Object3D();\n\n            this.add(this.handles);\n            this.add(this.pickers);\n            this.add(this.planes);\n            this.add(this.highlights);\n            this.add(this.hemiPicker);\n            this.add(this.subPickers);\n\n            //// PLANES\n\n            var planeGeometry = new THREE.PlaneBufferGeometry( 50, 50, 2, 2 );\n            var planeMaterial = new THREE.MeshBasicMaterial( { wireframe: true } );\n            planeMaterial.side = THREE.DoubleSide;\n\n            var planes = {\n                \"XY\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"YZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"XZ\":   new THREE.Mesh( planeGeometry, planeMaterial ),\n                \"XYZE\": new THREE.Mesh( planeGeometry, planeMaterial )\n            };\n\n            this.activePlane = planes[\"XYZE\"];\n\n            planes[\"YZ\"].rotation.set( 0, Math.PI/2, 0 );\n            planes[\"XZ\"].rotation.set( -Math.PI/2, 0, 0 );\n\n            for (var i in planes) {\n                planes[i].name = i;\n                this.planes.add(planes[i]);\n                this.planes[i] = planes[i];\n                planes[i].visible = false;\n            }\n\n            this.setupGizmos();\n            this.activeMode = \"\";\n\n            // reset Transformations\n\n            this.traverse(function ( child ) {\n                if (child instanceof THREE.Mesh) {\n                    child.updateMatrix();\n\n                    var tempGeometry = new THREE.Geometry();\n                    if (child.geometry instanceof THREE.BufferGeometry) {\n                        child.geometry = new THREE.Geometry().fromBufferGeometry( child.geometry );\n                    }\n                    tempGeometry.merge( child.geometry, child.matrix );\n\n                    child.geometry = tempGeometry;\n                    child.position.set( 0, 0, 0 );\n                    child.rotation.set( 0, 0, 0 );\n                    child.scale.set( 1, 1, 1 );\n                }\n            });\n\n        };\n\n        this.hide = function () {\n            this.traverse(function( child ) {\n                child.visible = false;\n            });\n        };\n\n        this.show = function () {\n            this.traverse(function( child ) {\n                child.visible = true;\n                if (child.parent == scope.pickers || child.parent == scope.hemiPicker ) child.visible = showPickers;\n                if (child.parent == scope.planes ) child.visible = false;\n            });\n            this.activePlane.visible = showActivePlane;\n        };\n\n        this.highlight = function ( axis ) {\n            this.traverse(function( child ) {\n                if ( child.material && child.material.highlight ) {\n                    if ( child.name == axis ) {\n                        child.material.highlight( true );\n                    } else {\n                        child.material.highlight( false );\n                    }\n                }\n            });\n        };\n\n        this.setupGizmos = function () {\n\n            var addGizmos = function( gizmoMap, parent ) {\n\n                for ( var name in gizmoMap ) {\n\n                    for ( var i = gizmoMap[name].length; i--;) {\n\n                        var object = gizmoMap[name][i][0];\n                        var position = gizmoMap[name][i][1];\n                        var rotation = gizmoMap[name][i][2];\n                        var visble = gizmoMap[name][i][3];\n\n                        object.name = name;\n\n                        if ( position ) object.position.set( position[0], position[1], position[2] );\n                        if ( rotation ) object.rotation.set( rotation[0], rotation[1], rotation[2] );\n                        if ( visble ) object.visble = visble;\n\n                        parent.add( object );\n\n                    }\n\n                }\n\n            };\n\n            this.setHandlePickerGizmos();\n\n            addGizmos(this.handleGizmos, this.handles);\n            addGizmos(this.pickerGizmos, this.pickers);\n            addGizmos(this.highlightGizmos, this.highlights);\n            addGizmos(this.hemiPickerGizmos, this.hemiPicker);\n            addGizmos(this.subPickerGizmos, this.subPickers);\n\n            this.hide();\n            this.show();\n\n        };\n\n    };\n\n    THREE.TransformGizmo.prototype = Object.create( THREE.Object3D.prototype );\n\n    THREE.TransformGizmo.prototype.update = function ( rotation, eye ) {\n\n        var vec1 = new THREE.Vector3( 0, 0, 0 );\n        var vec2 = new THREE.Vector3( 0, 1, 0 );\n        var lookAtMatrix = new THREE.Matrix4();\n\n        this.traverse(function(child) {\n            if ( child.name ) {\n                if ( child.name.search(\"E\") != -1 ) {\n                    child.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( eye, vec1, vec2 ) );\n                } else if ( child.name.search(\"X\") != -1 || child.name.search(\"Y\") != -1 || child.name.search(\"Z\") != -1 ) {\n                    child.quaternion.setFromEuler( rotation );\n                }\n            }\n        });\n\n    };\n\n    THREE.TransformGizmoTranslate = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        this.setHandlePickerGizmos = function () {\n\n            var arrowGeometry = createArrowGeometry( 0, 0.05, 0.2, 12, 1, false );\n            var lineXGeometry = createLineGeometry( 'X' );\n            var lineYGeometry = createLineGeometry( 'Y' );\n            var lineZGeometry = createLineGeometry( 'Z' );\n\n            this.handleGizmos = {\n                X: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xf12c2c } ) ), [ 0.5, 0, 0 ], [ 0, 0, -Math.PI/2 ] ],\n                    [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xf12c2c } ) ) ]\n                ],\n                Y: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0bb80b } ) ), [ 0, 0.5, 0 ] ],\n                    [   new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x0bb80b } ) ) ]\n                ],\n                Z: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x2c2cf1 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ],\n                    [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x2c2cf1 } ) ) ]\n                ],\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.OctahedronGeometry( 0.1, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, 0 ] ]\n                ],\n                XY: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.15, 0.15, 0 ] ]\n                ],\n                YZ: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.15, 0.15 ], [ 0, Math.PI/2, 0 ] ]\n                ],\n                XZ: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.29, 0.29 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.15, 0, 0.15 ], [ -Math.PI/2, 0, 0 ] ]\n                ]\n            };\n\n            this.pickerGizmos = {\n                X: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0.6, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                ],\n                Y: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0.6, 0 ] ]\n                ],\n                Z: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.6 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.OctahedronGeometry( 0.2, 0 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                ],\n                XY: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0xffff00, opacity: 0.25 } ) ), [ 0.2, 0.2, 0 ] ]\n                ],\n                YZ: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ), [ 0, 0.2, 0.2 ], [ 0, Math.PI/2, 0 ] ]\n                ],\n                XZ: [\n                    [ new THREE.Mesh( new THREE.PlaneBufferGeometry( 0.4, 0.4 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ), [ 0.2, 0, 0.2 ], [ -Math.PI/2, 0, 0 ] ]\n                ]\n            };\n\n            this.hemiPickerGizmos = {\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.BoxGeometry( 1.2, 1.2, 1.2 ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0.5, 0.5, 0.5 ], null, false ]\n                ]\n            };\n\n        };\n\n        this.setActivePlane = function ( axis, eye ) {\n\n            var tempMatrix = new THREE.Matrix4();\n            eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n            if ( axis == \"X\" ) {\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n            }\n\n            if ( axis == \"Y\" ){\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n            }\n\n            if ( axis == \"Z\" ){\n                this.activePlane = this.planes[ \"XZ\" ];\n                if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n            }\n\n            if ( axis == \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n            if ( axis == \"XY\" ) this.activePlane = this.planes[ \"XY\" ];\n\n            if ( axis == \"YZ\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n            if ( axis == \"XZ\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n            this.hide();\n            this.show();\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoTranslate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n    THREE.TransformGizmoRotate = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        this.setHandlePickerGizmos = function () {\n\n            this.handleGizmos = {\n                RX: [\n                    [ new THREE.Line( createCircleGeometry(1,'x',0.5), new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n                ],\n                RY: [\n                    [ new THREE.Line( createCircleGeometry(1,'y',0.5), new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n                ],\n                RZ: [\n                    [ new THREE.Line( createCircleGeometry(1,'z',0.5), new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n                ],\n                RE: [\n                    [ new THREE.Line( createCircleGeometry(1.25,'z',1), new GizmoLineMaterial( { color: 0x00ffff } ) ) ]\n                ],\n                RXYZE: [\n                    [ new THREE.Line( createCircleGeometry(1,'z',1), new GizmoLineMaterial( { color: 0xff00ff } ) ) ]\n                ]\n            };\n\n            this.pickerGizmos = {\n                RX: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, -Math.PI/2, -Math.PI/2 ] ]\n                ],\n                RY: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                RZ: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                ],\n                RE: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1.25, 0.12, 2, 24 ), new GizmoMaterial( { color: 0x00ffff, opacity: 0.25 } ) ) ]\n                ],\n                RXYZE: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 2, 24 ), new GizmoMaterial( { color: 0xff00ff, opacity: 0.25 } ) ) ]\n                ]\n            };\n\n        };\n\n        this.setActivePlane = function ( axis ) {\n\n            if ( axis == \"RE\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n            if ( axis == \"RX\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n            if ( axis == \"RY\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n            if ( axis == \"RZ\" ) this.activePlane = this.planes[ \"XY\" ];\n\n            this.hide();\n            this.show();\n\n        };\n\n        this.update = function ( rotation, eye2 ) {\n\n            THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n            var tempMatrix = new THREE.Matrix4();\n            var worldRotation = new THREE.Euler( 0, 0, 1 );\n            var tempQuaternion = new THREE.Quaternion();\n            var unitX = new THREE.Vector3( 1, 0, 0 );\n            var unitY = new THREE.Vector3( 0, 1, 0 );\n            var unitZ = new THREE.Vector3( 0, 0, 1 );\n            var quaternionX = new THREE.Quaternion();\n            var quaternionY = new THREE.Quaternion();\n            var quaternionZ = new THREE.Quaternion();\n            var eye = eye2.clone();\n\n            worldRotation.copy( this.planes[\"XY\"].rotation );\n            tempQuaternion.setFromEuler( worldRotation );\n\n            tempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\n            eye.applyMatrix4( tempMatrix );\n\n            this.traverse(function(child) {\n\n                tempQuaternion.setFromEuler( worldRotation );\n\n                if ( child.name == \"RX\" ) {\n                    quaternionX.setFromAxisAngle( unitX, Math.atan2( -eye.y, eye.z ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    child.quaternion.copy( tempQuaternion );\n                }\n\n                if ( child.name == \"RY\" ) {\n                    quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                    child.quaternion.copy( tempQuaternion );\n                }\n\n                if ( child.name == \"RZ\" ) {\n                    quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n                    child.quaternion.copy( tempQuaternion );\n                }\n\n            });\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n    THREE.TransformGizmoTranslateRotate = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        var scope = this;\n\n        this.setHandlePickerGizmos = function () {\n\n            var arrowGeometry = createArrowGeometry( 0, 0.05, 0.2, 12, 1, false );\n            var lineGeometry = new THREE.Geometry();\n            lineGeometry.vertices.push( new THREE.Vector3( 0, 0, -0.1 ), new THREE.Vector3( 0, 0, 0.1 ), new THREE.Vector3( -0.1, 0, 0 ), new THREE.Vector3( 0.1, 0, 0 ) );\n            var theta = 0.15;\n\n            this.handleGizmos = {\n                Z: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xffffff } ) ), [ 0, 0, 0.25 ], [ Math.PI/2, 0, 0 ] ],\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.015, 0.015, 0.6, 4, 1, false ), new GizmoMaterial( { color: 0xffffff } ) ), [ 0, 0, 0.5 ],[ Math.PI/2, 0, 0 ] ]\n                ],\n                RX: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.015, 12, 60, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000 } ) ), [ 0, 0, 0 ], [ theta * Math.PI, -Math.PI/2, 0 ] ],\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.05, 0.05, 0.015, 60, 1, false ), new GizmoMaterial( { color: 0xff0000 } ) ), [ 0, 0, 1 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                RY: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.015, 12, 60, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, (0.5-theta)*Math.PI ] ],\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.05, 0.05, 0.01, 60, 1, false ), new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 1 ] ]\n                ]\n            };\n\n            this.pickerGizmos = {\n                Z: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.12, 0.12, 0.65, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                RX: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ theta * Math.PI, -Math.PI/2, 0 ] ]\n                ],\n                RY: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.12, 4, 12, theta * 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, (0.5-theta)*Math.PI ] ]\n                ]\n            };\n\n            this.subPickerGizmos = {\n                Z: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.12, 0.12, 0.65, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ]\n                ]\n            };\n\n            this.highlightGizmos = {\n                Z: [\n                ],\n                RX: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.02, 12, 60, 2 * Math.PI ), new GizmoMaterial( { color: 0xff0000, opacity: 1 } ) ), [ 0, 0, 0 ], [ 0, -Math.PI/2, -Math.PI/2 ], false ]\n                ],\n                RY: [\n                    [ new THREE.Mesh( new THREE.TorusGeometry( 1, 0.02, 12, 60, 2 * Math.PI ), new GizmoMaterial( { color: 0x0000ff, opacity: 1 } ) ), [ 0, 0, 0 ], [ Math.PI/2, 0, 0 ], false ]\n                ]\n            };\n\n            this.hemiPickerGizmos = {\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.SphereGeometry( 1.2, 8, 8, 0, Math.PI ), new GizmoMaterial( { color: 0x0000ff } ) ), null, null, false ]\n                ]\n            };\n\n        };\n\n        this.setActivePlane = function ( axis, eye ) {\n\n            if ( this.activeMode == \"translate\" ) {\n\n                var tempMatrix = new THREE.Matrix4();\n                eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n                if ( axis == \"X\" ) {\n                    this.activePlane = this.planes[ \"XY\" ];\n                    if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n                }\n\n                if ( axis == \"Y\" ){\n                    this.activePlane = this.planes[ \"XY\" ];\n                    if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n                }\n\n                if ( axis == \"Z\" ){\n                    this.activePlane = this.planes[ \"XZ\" ];\n                    if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n                }\n\n            } else if ( this.activeMode == \"rotate\" ){\n\n                if ( axis == \"RX\" ) this.activePlane = this.planes[ \"YZ\" ];\n\n                if ( axis == \"RY\" ) this.activePlane = this.planes[ \"XZ\" ];\n\n                if ( axis == \"RZ\" ) this.activePlane = this.planes[ \"XY\" ];\n\n            }\n\n            this.hide();\n            this.show();\n\n        };\n\n        this.update = function ( rotation, eye2 ) {\n\n            if ( this.activeMode == \"translate\" ) {\n\n                THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n            } else if ( this.activeMode == \"rotate\" ) {\n\n                THREE.TransformGizmo.prototype.update.apply( this, arguments );\n\n                var tempMatrix = new THREE.Matrix4();\n                var worldRotation = new THREE.Euler( 0, 0, 1 );\n                var tempQuaternion = new THREE.Quaternion();\n                var unitX = new THREE.Vector3( 1, 0, 0 );\n                var unitY = new THREE.Vector3( 0, 1, 0 );\n                var unitZ = new THREE.Vector3( 0, 0, 1 );\n                var quaternionX = new THREE.Quaternion();\n                var quaternionY = new THREE.Quaternion();\n                var quaternionZ = new THREE.Quaternion();\n                var eye = eye2.clone();\n\n                worldRotation.copy( this.planes[\"XY\"].rotation );\n                tempQuaternion.setFromEuler( worldRotation );\n\n                tempMatrix.makeRotationFromQuaternion( tempQuaternion ).getInverse( tempMatrix );\n                eye.applyMatrix4( tempMatrix );\n\n                this.traverse(function(child) {\n\n                    tempQuaternion.setFromEuler( worldRotation );\n\n                    if ( child.name == \"RX\" ) {\n                        quaternionX.setFromAxisAngle( unitX, Math.atan2( -eye.y, eye.z ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                    if ( child.name == \"RY\" ) {\n                        quaternionY.setFromAxisAngle( unitY, Math.atan2( eye.x, eye.z ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                    if ( child.name == \"RZ\" ) {\n                        quaternionZ.setFromAxisAngle( unitZ, Math.atan2( eye.y, eye.x ) );\n                        tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n                        child.quaternion.copy( tempQuaternion );\n                    }\n\n                });\n\n            }\n\n        };\n\n        this.show = function () {\n            this.traverse(function( child ) {\n                if ( scope.parent == null || (scope.parent.useAllPickers || child.parent != scope.handles) ) child.visible = true;\n                if ( child.material ) child.material.opacity = child.material.oldOpacity;\n                if ( child.parent == scope.pickers || child.parent == scope.hemiPicker || child.parent == scope.subPickers) child.visible = false;\n                if ( child.parent == scope.planes || child.parent == scope.highlights ) child.visible = false;\n            });\n            this.activePlane.visible = false;\n        };\n\n        this.highlight = function ( axis ) {\n            this.traverse(function( child ) {\n                if ( child.material && child.material.highlight ) {\n                    if ( child.name == axis ) {\n                        if ( child.parent == scope.highlights || child.parent == scope.handles ) child.visible = true;\n                        child.material.highlight( true );\n                    } else {\n                        child.material.highlight( false );\n                        child.material.opacity = 0.1;\n                    }\n                }\n            });\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoTranslateRotate.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n    THREE.TransformGizmoScale = function () {\n\n        THREE.TransformGizmo.call( this );\n\n        this.setHandlePickerGizmos = function () {\n\n            var arrowGeometry = createArrowGeometry( 0.125, 0.125, 0.125 );\n            var lineXGeometry = createLineGeometry( 'X' );\n            var lineYGeometry = createLineGeometry( 'Y' );\n            var lineZGeometry = createLineGeometry( 'Z' );\n\n            this.handleGizmos = {\n                X: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0xff0000 } ) ), [ 0.5, 0, 0 ], [ 0, 0, -Math.PI/2 ] ],\n                    [ new THREE.Line( lineXGeometry, new GizmoLineMaterial( { color: 0xff0000 } ) ) ]\n                ],\n                Y: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x00ff00 } ) ), [ 0, 0.5, 0 ] ],\n                    [ new THREE.Line( lineYGeometry, new GizmoLineMaterial( { color: 0x00ff00 } ) ) ]\n                ],\n                Z: [\n                    [ new THREE.Mesh( arrowGeometry, new GizmoMaterial( { color: 0x0000ff } ) ), [ 0, 0, 0.5 ], [ Math.PI/2, 0, 0 ] ],\n                    [ new THREE.Line( lineZGeometry, new GizmoLineMaterial( { color: 0x0000ff } ) ) ]\n                ],\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.BoxGeometry( 0.125, 0.125, 0.125 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                ]\n            };\n\n            this.pickerGizmos = {\n                X: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0xff0000, opacity: 0.25 } ) ), [ 0.6, 0, 0 ], [ 0, 0, -Math.PI/2 ] ]\n                ],\n                Y: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x00ff00, opacity: 0.25 } ) ), [ 0, 0.6, 0 ] ]\n                ],\n                Z: [\n                    [ new THREE.Mesh( new THREE.CylinderGeometry( 0.2, 0, 1, 4, 1, false ), new GizmoMaterial( { color: 0x0000ff, opacity: 0.25 } ) ), [ 0, 0, 0.6 ], [ Math.PI/2, 0, 0 ] ]\n                ],\n                XYZ: [\n                    [ new THREE.Mesh( new THREE.BoxGeometry( 0.4, 0.4, 0.4 ), new GizmoMaterial( { color: 0xffffff, opacity: 0.25 } ) ) ]\n                ]\n            };\n\n        };\n\n        this.setActivePlane = function ( axis, eye ) {\n\n            var tempMatrix = new THREE.Matrix4();\n            eye.applyMatrix4( tempMatrix.getInverse( tempMatrix.extractRotation( this.planes[ \"XY\" ].matrixWorld ) ) );\n\n            if ( axis == \"X\" ) {\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs(eye.y) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"XZ\" ];\n            }\n\n            if ( axis == \"Y\" ){\n                this.activePlane = this.planes[ \"XY\" ];\n                if ( Math.abs(eye.x) > Math.abs(eye.z) ) this.activePlane = this.planes[ \"YZ\" ];\n            }\n\n            if ( axis == \"Z\" ){\n                this.activePlane = this.planes[ \"XZ\" ];\n                if ( Math.abs(eye.x) > Math.abs(eye.y) ) this.activePlane = this.planes[ \"YZ\" ];\n            }\n\n            if ( axis == \"XYZ\" ) this.activePlane = this.planes[ \"XYZE\" ];\n\n            this.hide();\n            this.show();\n\n        };\n\n        this.init();\n\n    };\n\n    THREE.TransformGizmoScale.prototype = Object.create( THREE.TransformGizmo.prototype );\n\n    THREE.TransformControls = function ( camera, domElement, mode ) {\n\n        // TODO: Make non-uniform scale and rotate play nice in hierarchies\n        // TODO: ADD RXYZ contol\n\n        THREE.Object3D.call( this );\n\n        domElement = ( domElement !== undefined ) ? domElement : document;\n\n        this.gizmo = {};\n        switch ( mode ) {\n            case \"translate\":\n                this.gizmo[mode] = new THREE.TransformGizmoTranslate();\n                break;\n            case \"rotate\":           \n               this.gizmo[mode] = new THREE.TransformGizmoRotate();\n               break;\n            case \"transrotate\":\n                this.gizmo[mode] = new THREE.TransformGizmoTranslateRotate();\n                break;\n            case \"scale\":\n                this.gizmo[mode] = new THREE.TransformGizmoScale();\n                break;\n        }\n\n        this.add(this.gizmo[mode]);\n        this.gizmo[mode].hide();\n\n        this.object = undefined;\n        this.snap = null;\n        this.snapDelta = 0;\n        this.space = \"world\";\n        this.size = 1;\n        this.axis = null;\n        this.useAllPickers = true;\n\n        this.unitX = new THREE.Vector3( 1, 0, 0 );\n        this.unitY = new THREE.Vector3( 0, 1, 0 );\n        this.unitZ = new THREE.Vector3( 0, 0, 1 );\n        this.normal = new THREE.Vector3(0, 0, 1);\n\n        if ( mode === \"transrotate\" ) {\n            var geometry = new THREE.Geometry();\n            geometry.vertices.push( new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1) );\n            var material = new THREE.LineBasicMaterial( {color: 0x000000, linewidth:2, depthTest: false} );\n            this.startLine = new THREE.Line( geometry, material );\n            var geometry = new THREE.Geometry();\n            var material = new THREE.LineBasicMaterial( {color: 0xffe603, linewidth:2, depthTest: false} );\n            geometry.vertices.push( new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, 1) );\n            this.endLine = new THREE.Line( geometry, material );\n            var geometry = new THREE.Geometry();\n            var material = new THREE.LineDashedMaterial({color: 0x000000, linewidth:1, depthTest: false});\n            geometry.vertices.push( new THREE.Vector3(0, -1, 0), new THREE.Vector3(0, 1, 0) );\n            this.centerLine = new THREE.Line( geometry, material );\n\n            var map = THREE.ImageUtils.loadTexture(Autodesk.Viewing.Private.getResourceUrl(\"res/textures/centerMarker_X.png\"));\n            map.magFilter = map.minFilter = THREE.NearestFilter;\n            var geometry = new THREE.CircleGeometry( 0.1, 32 );\n            var material = new THREE.MeshBasicMaterial({opacity: 1, side: THREE.DoubleSide, transparent:true, map:map});\n            this.centerMark = new THREE.Mesh( geometry, material );\n            this.centerMark.rotation.set(Math.PI/2, 0, 0);\n\n            this.ticks = {};\n            var map = THREE.ImageUtils.loadTexture(Autodesk.Viewing.Private.getResourceUrl(\"res/textures/cardinalPoint.png\"));\n            map.magFilter = map.minFilter = THREE.NearestFilter;\n            var material = new THREE.MeshBasicMaterial({depthTest: false, opacity: 1, transparent:true, side: THREE.DoubleSide, map:map});\n            var w = 0.12, h = 0.25, d = 1.15;\n\n            this.ticks[\"RX\"] = new THREE.Object3D();\n            var geometry = new THREE.PlaneBufferGeometry(w, h);\n            var mesh = new THREE.Mesh(geometry, material);\n            mesh.position.set(0, 0, -d-h/2);\n            mesh.rotation.set(Math.PI/2, Math.PI/2, 0);\n            this.ticks[\"RX\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(0, d+h/2, 0);\n            mesh.rotation.set(0, Math.PI/2, 0);\n            this.ticks[\"RX\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(0, 0, d+h/2);\n            mesh.rotation.set(0, Math.PI/2, Math.PI/2);\n            this.ticks[\"RX\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(0, -d-h/2, 0);\n            mesh.rotation.set(0, Math.PI/2, 0);\n            this.ticks[\"RX\"].add(mesh);\n\n            this.ticks[\"RY\"] = new THREE.Object3D();\n            mesh = mesh.clone();\n            mesh.position.set(0, 0, -d-h/2);\n            mesh.rotation.set(Math.PI/2, 0, 0);\n            this.ticks[\"RY\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(-d-h/2, 0, 0);\n            mesh.rotation.set(Math.PI/2, 0, Math.PI/2);\n            this.ticks[\"RY\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(0, 0, d+h/2);\n            mesh.rotation.set(Math.PI/2, 0, 0);\n            this.ticks[\"RY\"].add(mesh);\n\n            mesh = mesh.clone();\n            mesh.position.set(d+h/2, 0, 0);\n            mesh.rotation.set(Math.PI/2, 0, Math.PI/2);\n            this.ticks[\"RY\"].add(mesh);\n        }\n\n        var scope = this;\n\n        var _dragging = false;\n        var _mode = mode;\n        var _plane = \"XY\";\n\n        var changeEvent = { type: \"change\" };\n        var mouseDownEvent = { type: \"mouseDown\" };\n        var mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n        var objectChangeEvent = { type: \"objectChange\" };\n\n        var ray = new THREE.Raycaster();\n        var pointerVector = new THREE.Vector3();\n        var pointerDir = new THREE.Vector3();\n\n        var point = new THREE.Vector3();\n        var offset = new THREE.Vector3();\n\n        var rotation = new THREE.Vector3();\n        var offsetRotation = new THREE.Vector3();\n        var scale = 1;\n        this.clientScale = 1;\n\n        var lookAtMatrix = new THREE.Matrix4();\n        var eye = new THREE.Vector3();\n\n        var tempMatrix = new THREE.Matrix4();\n        var tempVector = new THREE.Vector3();\n        var tempQuaternion = new THREE.Quaternion();\n        var projX = new THREE.Vector3();\n        var projY = new THREE.Vector3();\n        var projZ = new THREE.Vector3();\n\n        var quaternionXYZ = new THREE.Quaternion();\n        var quaternionX = new THREE.Quaternion();\n        var quaternionY = new THREE.Quaternion();\n        var quaternionZ = new THREE.Quaternion();\n        var quaternionE = new THREE.Quaternion();\n\n        var oldPosition = new THREE.Vector3();\n        var oldScale = new THREE.Vector3();\n        var oldRotationMatrix = new THREE.Matrix4();\n\n        var parentRotationMatrix  = new THREE.Matrix4();\n        var parentScale = new THREE.Vector3();\n\n        var worldPosition = new THREE.Vector3();\n        var worldRotation = new THREE.Euler();\n        var worldRotationMatrix  = new THREE.Matrix4();\n        var camPosition = new THREE.Vector3();\n        var camRotation = new THREE.Euler();\n\n        this.attach = function ( object ) {\n\n            scope.object = object;\n\n            this.gizmo[_mode].show();\n\n            scope.update();\n\n            scope.updateUnitVectors();\n\n        };\n\n        this.detach = function ( object ) {\n\n            scope.object = undefined;\n            this.axis = null;\n\n            this.gizmo[_mode].hide();\n\n        };\n\n        this.setMode = function ( mode ) {\n\n            _mode = mode ? mode : _mode;\n\n            if ( _mode == \"scale\" ) scope.space = \"local\";\n\n            this.gizmo[_mode].show();\n\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.getPicker = function () {\n\n            return scope.gizmo[_mode].hemiPicker.children;\n\n        };\n\n        this.setPosition = function ( position ) {\n\n            this.object.position.copy ( position );\n            this.update();\n        \n        };\n\n        this.setNormal = function ( normal ) {\n\n            tempQuaternion.setFromUnitVectors( this.normal, normal );\n            this.unitX.applyQuaternion( tempQuaternion );\n            this.unitY.applyQuaternion( tempQuaternion );\n            this.unitZ.applyQuaternion( tempQuaternion );\n            this.normal.copy( normal );\n            if (this.object) {\n                this.object.quaternion.multiply ( tempQuaternion );\n            }\n            this.update();\n        };\n\n        this.setSnap = function ( snap, delta ) {\n\n            scope.snap = snap;\n            scope.snapDelta = delta;\n\n        };\n\n        this.setSize = function ( size ) {\n\n            scope.size = size;\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.setSpace = function ( space ) {\n\n            scope.space = space;\n            this.update();\n            scope.dispatchEvent( changeEvent );\n\n        };\n\n        this.update = function (highlight) {\n\n            if ( scope.object === undefined ) return;\n\n            scope.object.updateMatrixWorld();\n            worldPosition.setFromMatrixPosition( scope.object.matrixWorld );\n            worldRotation.setFromRotationMatrix( tempMatrix.extractRotation( scope.object.matrixWorld ) );\n\n            camera.updateMatrixWorld();\n            camPosition.setFromMatrixPosition( camera.matrixWorld );\n            //camRotation.setFromRotationMatrix( tempMatrix.extractRotation( camera.matrixWorld ) );\n\n            this.position.copy( worldPosition );\n\n            this.quaternion.setFromEuler( worldRotation );\n\n            this.normal.set( 0, 0, 1 );\n            this.normal.applyEuler( worldRotation );\n\n            // keep same screen height (100px)\n            var height;\n            if ( camera.isPerspective ) {\n                var dist = worldPosition.distanceTo( camPosition );\n                height = 2 * Math.tan( camera.fov * Math.PI / 360 ) * dist;\n            } else {\n                // orthographic, so the world height is simply top minus bottom\n                height = camera.top - camera.bottom;\n            }\n            var rect = domElement.getBoundingClientRect();\n            // multiply 100 pixels by world height for the window, divide by window height in pixels,\n            // to get world height equivalent to 100 pixels.\n            scale = this.clientScale * 100 * height / rect.height;\n            this.scale.set( scale, scale, scale );\n\n            // Set the gizmo position with the specified offset.\n            if(this.gizmoOffset) {\n                this.position.add(this.gizmoOffset);\n            }\n            this.updateMatrixWorld();\n            //eye.copy( camPosition ).sub( worldPosition ).normalize();\n\n            //if ( scope.space == \"local\" )\n            //    this.gizmo[_mode].update( worldRotation, eye );\n            //else if ( scope.space == \"world\" )\n            //    this.gizmo[_mode].update( new THREE.Euler(), eye );\n\n            if (highlight)\n                this.gizmo[_mode].highlight( scope.axis );\n\n        };\n\n        this.setGizmoOffset = function(vec) {\n            // Reset the gizmo if no vector passed in.\n            this.gizmoOffset = !vec ? new THREE.Vector3(0,0,0) : vec;\n            this.update();\n        }\n\n        this.updateUnitVectors = function () {\n\n            this.unitX.set( 1, 0, 0 );\n            this.unitY.set( 0, 1, 0 );\n            this.unitZ.set( 0, 0, 1 );\n            this.unitX.applyEuler( worldRotation );\n            this.unitY.applyEuler( worldRotation );\n            this.unitZ.applyEuler( worldRotation );\n\n        };\n\n        this.showRotationGizmos = function (set) {\n\n            var handles = this.gizmo[_mode].handles.children;\n            for ( var i = 0; i < handles.length; i++ ) {\n                var child = handles[i];\n                child.visible = true;\n                if ( child.name.search(\"R\") !== -1 ) child.visible = set;\n            }\n            this.useAllPickers = set;\n            \n        };\n\n        this.highlight = function () {\n\n            this.gizmo[_mode].highlight( this.axis || \"Z\" );\n\n        };\n\n        this.onPointerHover = function( event ) {\n\n            if ( scope.object === undefined || _dragging === true ) return false;\n\n            var pointer = event;\n\n            var intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n            var axis = null;\n            var mode = \"\";\n\n            if ( intersect ) {\n\n                axis = intersect.object.name;\n                mode = axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n\n            }\n\n            if ( scope.axis !== axis ) {\n\n                scope.axis = axis;\n                scope.gizmo[_mode].activeMode = mode;\n                scope.update(true);\n                scope.dispatchEvent( changeEvent );\n\n            } \n\n            if (scope.axis === null) {\n\n                scope.gizmo[_mode].show();\n            \n            }\n\n            return intersect? true : false;\n\n        }\n\n        this.onPointerDown = function( event ) {\n\n            if ( scope.object === undefined || _dragging === true ) return false;\n            \n            var pointer = event;\n\n            if ( event.pointerType === 'touch' ) {\n\n                var intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n                var axis = null;\n                var mode = \"\";\n\n                if ( intersect ) {\n\n                    axis = intersect.object.name;\n                    mode = axis.search(\"R\") != -1 ? \"rotate\" : \"translate\";\n\n                }\n\n                if ( scope.axis !== axis ) {\n\n                    scope.axis = axis;\n                    scope.gizmo[_mode].activeMode = mode;\n                }\n            }\n\n            var intersect = null;\n\n            if ( pointer.button === 0 || pointer.button === -1 || pointer.button === undefined ) {\n\n                intersect = intersectObjects( pointer, scope.useAllPickers? scope.gizmo[_mode].pickers.children: scope.gizmo[_mode].subPickers.children );\n\n                if ( intersect ) {\n\n                    scope.dispatchEvent( mouseDownEvent );\n\n                    scope.axis = intersect.object.name;\n\n                    scope.update();\n\n                    eye.copy( camera.position ).sub( worldPosition ).normalize();\n\n                    scope.gizmo[_mode].setActivePlane( scope.axis, eye );\n\n                    var planeIntersect = intersectObjects( pointer, [scope.gizmo[_mode].activePlane] );\n\n                    if ( planeIntersect )\n                        offset.copy( planeIntersect.point );\n\n                    oldPosition.copy( scope.object.position );\n                    oldScale.copy( scope.object.scale );\n\n                    oldRotationMatrix.extractRotation( scope.object.matrix );\n                    worldRotationMatrix.extractRotation( scope.object.matrixWorld );\n\n                    if ( scope.object.parent ) {\n                        parentRotationMatrix.extractRotation( scope.object.parent.matrixWorld );\n                        parentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.parent.matrixWorld ) );\n                    } else {\n                        parentRotationMatrix.extractRotation( scope.object.matrixWorld );\n                        parentScale.setFromMatrixScale( tempMatrix.getInverse( scope.object.matrixWorld ) );\n                    }\n\n                    // show rotation start line and ticks\n                    if ( _mode === \"transrotate\" && scope.gizmo[_mode].activeMode === \"rotate\" ) {\n                        scope.startLine.geometry.vertices[0].set(0, 0, 0).applyMatrix4( scope.matrixWorld );\n                        scope.startLine.geometry.vertices[1].set(0, 0, 1).applyMatrix4( scope.matrixWorld );\n                        scope.startLine.geometry.verticesNeedUpdate = true;\n                        scope.parent.add( scope.startLine );\n\n                        var pos = scope.object.geometry.getAttribute('position');\n                        var pt1 = new THREE.Vector3().fromAttribute(pos, 0).applyMatrix4( scope.object.matrixWorld );\n                        var pt2 = new THREE.Vector3().fromAttribute(pos, 1).applyMatrix4( scope.object.matrixWorld );\n                        var pt3 = new THREE.Vector3().fromAttribute(pos, 2).applyMatrix4( scope.object.matrixWorld );\n                        var pt4 = new THREE.Vector3().fromAttribute(pos, 3).applyMatrix4( scope.object.matrixWorld );\n                        if (scope.axis === \"RX\") {\n                            pt1.lerp(pt3, 0.5);\n                            pt2.lerp(pt4, 0.5);\n                            var dist = pt1.distanceTo(pt2);\n                            scope.centerLine.material.dashSize = dist / 15;\n                            scope.centerLine.material.gapSize = dist / 30;\n                            scope.centerLine.geometry.vertices[0].copy(pt1);\n                            scope.centerLine.geometry.vertices[1].copy(pt2);\n                        } else {\n                            pt1.lerp(pt2, 0.5);\n                            pt3.lerp(pt4, 0.5);\n                            var dist = pt1.distanceTo(pt3);\n                            scope.centerLine.material.dashSize = dist / 15;\n                            scope.centerLine.material.gapSize = dist / 30;\n                            scope.centerLine.geometry.vertices[0].copy(pt1);\n                            scope.centerLine.geometry.vertices[1].copy(pt3);\n                        }\n                        scope.centerLine.geometry.computeLineDistances();\n                        scope.centerLine.geometry.verticesNeedUpdate = true;\n                        scope.parent.add( scope.centerLine );\n\n                        scope.ticks[scope.axis].position.copy( scope.position );\n                        scope.ticks[scope.axis].quaternion.copy( scope.quaternion );\n                        scope.ticks[scope.axis].scale.copy( scope.scale );\n                        scope.parent.add( scope.ticks[scope.axis] );\n                    }\n\n                }\n\n            }\n\n            _dragging = true;\n\n            return intersect? true: false;\n\n        }\n\n        this.onPointerMove = function( event ) {\n\n            if ( scope.object === undefined || scope.axis === null || _dragging === false ) return false;\n\n            var pointer = event;\n\n            var planeIntersect = intersectObjects( pointer, [scope.gizmo[_mode].activePlane] );\n\n            if ( planeIntersect )\n                point.copy( planeIntersect.point );\n\n            var mode = scope.gizmo[_mode].activeMode;\n            if ( mode == \"translate\" ) {\n\n                point.sub( offset );\n                point.multiply(parentScale);\n\n                if ( scope.space == \"local\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    projX.copy( this.unitX );\n                    projY.copy( this.unitY );\n                    projZ.copy( this.unitZ );\n                    tempVector.set( 0, 0, 0 );\n                    if ( scope.axis.search(\"X\") != -1 ) {\n                        projX.multiplyScalar( point.dot( this.unitX ) );\n                        tempVector.add( projX );\n                    }\n                    if ( scope.axis.search(\"Y\") != -1 ) {\n                        projY.multiplyScalar( point.dot( this.unitY ) );\n                        tempVector.add(projY);\n                    }\n                    if ( scope.axis.search(\"Z\") != -1 ) {\n                        projZ.multiplyScalar( point.dot( this.unitZ ) );\n                        tempVector.add( projZ );\n                    }\n                    point.copy( tempVector );\n\n                    point.applyMatrix4( oldRotationMatrix );\n\n                    scope.object.position.copy( oldPosition );\n                    scope.object.position.add( point );\n\n                }\n\n                if ( scope.space == \"world\" || scope.axis.search(\"XYZ\") != -1 ) {\n\n                    projX.copy( this.unitX );\n                    projY.copy( this.unitY );\n                    projZ.copy( this.unitZ );\n                    tempVector.set( 0, 0, 0 );\n                    if ( scope.axis.search(\"X\") != -1 ) {\n                        projX.multiplyScalar( point.dot( this.unitX ) );\n                        tempVector.add( projX );\n                    }\n                    if ( scope.axis.search(\"Y\") != -1 ) {\n                        projY.multiplyScalar( point.dot( this.unitY ) );\n                        tempVector.add(projY);\n                    }\n                    if ( scope.axis.search(\"Z\") != -1 ) {\n                        projZ.multiplyScalar( point.dot( this.unitZ ) );\n                        tempVector.add( projZ );\n                    }\n                    point.copy( tempVector );\n\n                    point.applyMatrix4( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    scope.object.position.copy( oldPosition );\n                    scope.object.position.add( point );\n\n                }\n\n            } else if ( mode == \"scale\" ) {\n\n                point.sub( offset );\n                point.multiply(parentScale);\n\n                if ( scope.space == \"local\" ) {\n\n                    if ( scope.axis == \"XYZ\") {\n\n                        scale = 1 + ( ( point.y ) / 50 );\n\n                        scope.object.scale.x = oldScale.x * scale;\n                        scope.object.scale.y = oldScale.y * scale;\n                        scope.object.scale.z = oldScale.z * scale;\n\n                    } else {\n\n                        point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                        if ( scope.axis == \"X\" ) scope.object.scale.x = oldScale.x * ( 1 + point.x / 50 );\n                        if ( scope.axis == \"Y\" ) scope.object.scale.y = oldScale.y * ( 1 + point.y / 50 );\n                        if ( scope.axis == \"Z\" ) scope.object.scale.z = oldScale.z * ( 1 + point.z / 50 );\n\n                    }\n\n                }\n\n            } else if ( mode == \"rotate\") {\n\n                point.sub( worldPosition );\n                point.multiply(parentScale);\n                tempVector.copy(offset).sub( worldPosition );\n                tempVector.multiply(parentScale);\n\n                if ( scope.axis == \"RE\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n                    tempVector.applyMatrix4( tempMatrix.getInverse( lookAtMatrix ) );\n\n                    rotation.set( Math.atan2( point.z, point.y ), Math.atan2( point.x, point.z ), Math.atan2( point.y, point.x ) );\n                    offsetRotation.set( Math.atan2( tempVector.z, tempVector.y ), Math.atan2( tempVector.x, tempVector.z ), Math.atan2( tempVector.y, tempVector.x ) );\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    var rotz = rotation.z - offsetRotation.z;\n                    if ( scope.snap !== null ) {\n                        var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                        if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                            rotz = rotsnap;\n                        }\n                    }\n                    quaternionE.setFromAxisAngle( eye, rotz );\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionE );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                } else if ( scope.axis == \"RXYZE\" ) {\n\n                    var tempAxis = point.clone().cross(tempVector).normalize(); // rotation axis\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    var rot = - point.clone().angleTo(tempVector);\n                    if ( scope.snap !== null ) {\n                        var rotsnap = Math.round( rot / scope.snap ) * scope.snap;\n                        if ( Math.abs(rotsnap-rot) < scope.snapDelta ) {\n                            rot = rotsnap;\n                        }\n                    }\n                    quaternionX.setFromAxisAngle( tempAxis, rot );\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                } else if ( scope.space == \"local\" ) {\n\n                    point.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    tempVector.applyMatrix4( tempMatrix.getInverse( worldRotationMatrix ) );\n\n                    var projx = point.dot(this.unitX), projy = point.dot(this.unitY), projz = point.dot(this.unitZ);\n                    var tempx = tempVector.dot(this.unitX), tempy = tempVector.dot(this.unitY), tempz = tempVector.dot(this.unitZ);\n                    rotation.set( Math.atan2( projz, projy ), Math.atan2( projx, projz ), Math.atan2( projy, projx ) );\n                    offsetRotation.set( Math.atan2( tempz, tempy ), Math.atan2( tempx, tempz ), Math.atan2( tempy, tempx ) );\n\n                    var rotx = rotation.x - offsetRotation.x;\n                    var roty = rotation.y - offsetRotation.y;\n                    var rotz = rotation.z - offsetRotation.z;\n                    if ( scope.snap !== null ) {\n                        if ( scope.axis.search(\"X\") != -1 ) {\n                            var rotsnap = Math.round( rotx / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotx) < scope.snapDelta ) {\n                                rotx = rotsnap;\n                            }\n                        }\n                        if ( scope.axis.search(\"Y\") != -1 ) {\n                            var rotsnap = Math.round( roty / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-roty) < scope.snapDelta ) {\n                                roty = rotsnap;\n                            }\n                        }\n                        if ( scope.axis.search(\"Z\") != -1 ) {\n                            var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                                rotz = rotsnap;\n                            }\n                        }\n                    }\n                    quaternionX.setFromAxisAngle( this.unitX, rotx );\n                    quaternionY.setFromAxisAngle( this.unitY, roty );\n                    quaternionZ.setFromAxisAngle( this.unitZ, rotz );\n                    quaternionXYZ.setFromRotationMatrix( oldRotationMatrix );\n\n                    if ( scope.axis == \"RX\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionX );\n                    if ( scope.axis == \"RY\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionY );\n                    if ( scope.axis == \"RZ\" ) quaternionXYZ.multiplyQuaternions( quaternionXYZ, quaternionZ );\n\n                    scope.object.quaternion.copy( quaternionXYZ );\n\n                } else if ( scope.space == \"world\" ) {\n\n                    var projx = point.dot(this.unitX), projy = point.dot(this.unitY), projz = point.dot(this.unitZ);\n                    var tempx = tempVector.dot(this.unitX), tempy = tempVector.dot(this.unitY), tempz = tempVector.dot(this.unitZ);\n                    rotation.set( Math.atan2( projz, projy ), Math.atan2( projx, projz ), Math.atan2( projy, projx ) );\n                    offsetRotation.set( Math.atan2( tempz, tempy ), Math.atan2( tempx, tempz ), Math.atan2( tempy, tempx ) );\n\n                    tempQuaternion.setFromRotationMatrix( tempMatrix.getInverse( parentRotationMatrix ) );\n\n                    var rotx = rotation.x - offsetRotation.x;\n                    var roty = rotation.y - offsetRotation.y;\n                    var rotz = rotation.z - offsetRotation.z;\n                    if ( scope.snap !== null ) {\n                        if ( scope.axis.search(\"X\") != -1 ) {\n                            var rotsnap = Math.round( rotx / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotx) < scope.snapDelta ) {\n                                rotx = rotsnap;\n                            }\n                        }\n                        if ( scope.axis.search(\"Y\") != -1 ) {\n                            var rotsnap = Math.round( roty / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-roty) < scope.snapDelta ) {\n                                roty = rotsnap;\n                            }\n                        }\n                        if ( scope.axis.search(\"Z\") != -1 ) {\n                            var rotsnap = Math.round( rotz / scope.snap ) * scope.snap;\n                            if ( Math.abs(rotsnap-rotz) < scope.snapDelta ) {\n                                rotz = rotsnap;\n                            }\n                        }\n                    }\n                    quaternionX.setFromAxisAngle( this.unitX, rotx );\n                    quaternionY.setFromAxisAngle( this.unitY, roty );\n                    quaternionZ.setFromAxisAngle( this.unitZ, rotz );\n                    quaternionXYZ.setFromRotationMatrix( worldRotationMatrix );\n\n                    if ( scope.axis == \"RX\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionX );\n                    if ( scope.axis == \"RY\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionY );\n                    if ( scope.axis == \"RZ\" ) tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionZ );\n\n                    tempQuaternion.multiplyQuaternions( tempQuaternion, quaternionXYZ );\n\n                    scope.object.quaternion.copy( tempQuaternion );\n\n                }\n\n                // show rotation end line\n                if (_mode === \"transrotate\" ) {\n                    scope.add( scope.endLine );\n                    scope.add( scope.centerMark );\n                }\n\n            }\n\n            // update matrix\n            scope.object.matrixAutoUpdate = true;\n\n            scope.update(true);\n            scope.dispatchEvent( changeEvent );\n            scope.dispatchEvent( objectChangeEvent );\n\n            return planeIntersect? true : false;\n\n        }\n\n        this.onPointerUp = function( event ) {\n\n            if ( _dragging && ( scope.axis !== null ) ) {\n                mouseUpEvent.mode = _mode;\n                scope.dispatchEvent( mouseUpEvent )\n            }\n            _dragging = false;\n\n            this.gizmo[_mode].show();\n\n            this.updateUnitVectors();\n\n            // remove rotation start/end lines\n            if ( _mode === \"transrotate\" && this.gizmo[_mode].activeMode === \"rotate\" ) {\n                this.remove( this.endLine );\n                this.remove( this.centerMark );\n                this.parent.remove( this.centerLine );\n                this.parent.remove( this.startLine );\n                this.parent.remove( this.ticks[this.axis] );\n            }\n\n            return false;\n\n        }\n\n        function intersectObjects( pointer, objects ) {\n            return THREE.TransformControls.intersectObjects(pointer.canvasX, pointer.canvasY, objects, camera, true);\n        }\n    };\n\n    THREE.TransformControls.intersectObjects = (function () {\n\n        var pointerVector = new THREE.Vector3();\n        var pointerDir = new THREE.Vector3();\n        var ray = new THREE.Raycaster();\n\n        return function(clientX, clientY, objects, camera, recursive) {\n\n            // Convert client to viewport coords (in [-1,1]^2)\n            var x =  (clientX  / camera.clientWidth)  * 2 - 1;\n            var y = -(clientY  / camera.clientHeight) * 2 + 1; // y-direction flips between canvas and viewport coords\n\n            if (camera.isPerspective) {\n                pointerVector.set(x, y, 0.5);\n                pointerVector.unproject(camera);\n                ray.set(camera.position, pointerVector.sub(camera.position).normalize());\n            } else {\n                pointerVector.set(x, y, -1);\n                pointerVector.unproject(camera);\n                pointerDir.set(0, 0, -1);\n                ray.set(pointerVector, pointerDir.transformDirection(camera.matrixWorld));\n            }\n\n            var intersections = ray.intersectObjects(objects, recursive);\n            return intersections[0] ? intersections[0] : null;\n        };\n    })();\n\n    THREE.TransformControls.prototype = Object.create( THREE.Object3D.prototype );\n\n};\n","\nimport { init_TransformGizmos } from '../../thirdparty/three.js/TransformControls'\n\n// Declared at the bottom, inside a function.\nvar SectionMeshClass = null;\n\n/**\n * Tool that provides visual controls for the user to change the cutplane's position and angle.\n * It can (and should) be hooked to [ToolController's registerTool]{@Autodesk.Viewing.ToolController#registerTool}\n *\n * @param {Autodesk.Viewing.Viewer3D} viewer - Viewer3D instance\n * @param {Object} config - Configuration values\n * @param {Object} options.tintColor - Object containing attributes r, g, b in the range [0..1]\n * @param {Number} options.tintIntensity - Value range [0..1]\n * @constructor\n */\nexport var SectionTool = function(viewer, options)\n{\n    var _viewer  = viewer.impl;\n\n    var _names = [\"section\"];\n    var _active = false;\n\n    var _isDragging = false;\n    var _boxChanged = false;\n    var _isPlaneOn = true;\n    var _tintColor = options.tintColor;\n    var _tintIntensity = options.tintIntensity;\n\n    var _transRotControl;\n    var _transControl;\n\n    var _trcOffset;\n    var _sectionGroups = [];\n    var _sectionPlanes = [];\n    var _sectionPicker = [];\n    var _activeMode = \"\";\n    var _overlayName = \"gizmo\";\n    var _touchType = null;\n    var _initialized = false;\n    var _visibleAtFirst = true;\n    var _outlineIndices = [[0, 1], [1, 3], [3, 2], [2, 0]];\n    var _priority = 70;\n    var _selectionOpacity = 0.25;\n    var _selectionColor = 0x287EEA;\n\n    init_TransformGizmos();\n    init_SectionMesh();\n\n    function initControl() {\n\n        if (_initialized)\n            return;\n\n        _transRotControl = new THREE.TransformControls(_viewer.camera, _viewer.canvas, \"transrotate\");\n        _transRotControl.addEventListener('change', updateViewer);\n        _transRotControl.setSnap(Math.PI/2, Math.PI/36); // snap to 90 degs within 5 degs range\n\n        _transControl = new THREE.TransformControls(_viewer.camera, _viewer.canvas, \"translate\");\n        _transControl.addEventListener('change', updateViewer);\n\n        // add to overlay scene\n        if (_viewer.overlayScenes[_overlayName] === undefined) {\n            _viewer.createOverlayScene(_overlayName);\n        }\n        _viewer.addOverlay(_overlayName, _transRotControl);\n        _viewer.addOverlay(_overlayName, _transControl);\n\n        viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, updateControls);\n        viewer.addEventListener(Autodesk.Viewing.ISOLATE_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.HIDE_EVENT, updateSections);\n        viewer.addEventListener(Autodesk.Viewing.SHOW_EVENT, updateSections);\n        \n        _initialized = true;\n    }\n\n    function deinitControl() {\n        \n        if (!_initialized)\n            return;\n    \n        _viewer.removeOverlay(_overlayName, _transRotControl);\n        _transRotControl.removeEventListener('change', updateViewer);\n        _transRotControl = null;\n        _viewer.removeOverlay(_overlayName, _transControl);\n        _transControl.removeEventListener('change', updateViewer);\n        _transControl = null;\n        _viewer.removeOverlayScene(_overlayName);\n\n        viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, updateControls);\n        viewer.removeEventListener(Autodesk.Viewing.ISOLATE_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.HIDE_EVENT, updateSections);\n        viewer.removeEventListener(Autodesk.Viewing.SHOW_EVENT, updateSections);\n        \n        _initialized = false;\n    }\n\n    function updateViewer() {\n        _viewer.invalidate(false, false, true);\n    }\n\n    function updateControls() {\n        if (_transRotControl) {\n            _transRotControl.update();\n        }\n        if (_transControl) {\n            _transControl.update();\n        }\n    }\n\n    function updateSections() {\n        if (_active && _sectionPlanes.length === 1) {\n            updatePlaneMeshes(true);\n            updateControls();\n            updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n        }\n    }\n\n    /*function mix(a, b, val) {\n        return a * (1.0 - val) + b * val;\n    }*/\n    \n    function getDiffuseColor(material) {\n       return (material && material.color) || new THREE.Color(0xffffff);\n    }\n\n    /*function getSpecularColor(material) {\n        return (material && material.specular) || new THREE.Color(0xffffff);\n    }\n\n    function tintColor(c) {\n        var intensity = Autodesk.Viewing.Extensions.Section.tintIntensity;\n        var tc = _tintColor;\n        c.r = mix(c.r, tc.r, intensity);\n        c.g = mix(c.g, tc.g, intensity);\n        c.b = mix(c.b, tc.b, intensity);\n    }*/\n    \n    // Object used to iterator all fragments in all dbids in all models in a scene\n    // _timeSlice is the time in milliseconds before the iterator will allow itself\n    // to be interrupted. _sliceDelay is the time in milliseconds the iterator delays\n    // before starting a new time slice. The default values are 15 and 0 respectively.\n    // I did some experiments and it seemed like these values worked pretty well.\n    // _sliceDelay doesn't seem to matter very much, but making _timeSlice much\n    // larger will cause highlights to look jerky.\n    function FragmentIterator(_timeSlice, _sliceDelay) {\n\n        var _capTimer = 0;      // Timer used to delay time slices\n        var _callback;          // Callback for each fragment\n        var _models;            // Array of models in the scene\n        var _curModel;          // Current model\n        var _dbIds = [];        // Database ids for the current model\n        var _fragIds = [];      // Fragment ids for the current database id\n        var _instanceTree;       // Instance tree for current model\n        var _m;                 // Current index in _models\n        var _d;                 // Current index in _dbIds\n        var _f;                 // Current index in _fragIds\n\n        // Default value for _timeSlize and _sliceDelay\n        _timeSlice = _timeSlice || 15;\n        _sliceDelay = _sliceDelay || 0;\n\n        // Start the iterator\n        // models is the array of models to iterate\n        // delay is a delay to start the iteration. < 0 starts without any delay\n        // callback is the callback for each fragment:\n        //   callback(fragId, dbId, model, lastFrag)\n        // lastFrag is a boolean that is true when fragId is the last fragment for dbId.\n        this.start = function(models, delay, callback) {\n            reset(models);\n\n            _callback = callback;\n            if (callback) {\n                if (delay >= 0)\n                    _capTimer = setTimeout(doIteration, delay);\n                else\n                    doIteration();\n            }\n        };\n\n        // Reset the iterator, this is so we can clear the manager at the end.\n        function reset(models) {\n            if (_capTimer)\n                clearTimeout(_capTimer);\n            _capTimer = 0;\n            _models = models;\n            _dbIds.length = 0;\n            _fragIds.length = 0;\n            _instanceTree = null;\n            _m = -1;\n            _d = 0;\n            _f = 0;\n        }\n\n        // Do a single time slice\n        function doIteration() {\n            _capTimer = 0;\n            var endTime = performance.now() + _timeSlice;\n            while (performance.now() < endTime) {\n                // If we are done, then return\n                if (!next()) {\n                    // The cap scene is in sceneAfter, so we need to redraw the model to see the caps.\n                    // LMV-2571 - clear the render, as otherwise we will draw transparent objects atop themselves.\n                    _viewer.invalidate(true, true);\n                    // Clear everything when we are done\n                    reset(null);\n                    return;\n                }\n\n                // Call the call back function\n                _callback(_fragIds[_f], _dbIds[_d], _curModel, _f + 1 >= _fragIds.length, !_models || _m >= _models.length);\n            }\n\n            // Schedule the next time slice\n            _capTimer = setTimeout(doIteration, _sliceDelay);\n        }\n\n        // Advance to the next model in _models\n        function nextModel() {\n            // Continue processing the next model in _models\n            if (_models && _m < _models.length) {\n                // Go to next model\n                while (++_m < _models.length) {\n                    _instanceTree = _models[_m].getInstanceTree();\n                    // Only process the model, if it has a fragment map\n                    if (_instanceTree) {\n                        // Get the list of dbIds.\n                        _dbIds.length = 0;\n                        _instanceTree.enumNodeChildren(_models[_m].getRootId(), function(dbId) {\n                            _dbIds.push(dbId);\n                        }, true);\n                        // Only process the model if we got some ids\n                        if (_dbIds.length > 0) {\n                            // Set the current model and newly loaded dbIds\n                            _curModel = _models[_m];\n                            return _curModel;\n                        }\n                    }\n                }\n            }\n\n            // Done clear the current model and new loaded dbIds\n            _curModel = null;\n\n            // End of the models\n            return false;\n        }\n\n        // Advance to the next database id\n        function nextDbId() {\n            // At the end, return false\n            if (_d >= _dbIds.length)\n                return false;\n\n            // Go to next database id\n            while (++_d < _dbIds.length) {\n                var dbId = _dbIds[_d];\n                // Only process dbIds that are not hidden and not off\n                if (!_instanceTree.isNodeHidden(dbId) && !_instanceTree.isNodeOff(dbId)) {\n                    //All fragments that belong to the same node make part of the\n                    //same object so we have to accumulate all their intersections into one list\n                    _fragIds.length = 0;\n                    _instanceTree.enumNodeFragments(dbId, function(fragId) {\n                        _fragIds.push(fragId);\n                    }, false);\n                    // Only process the database id if there are some fragments\n                    if (_fragIds.length > 0)\n                        return true;\n                }\n            }\n\n            // end of the database ids\n            return false;\n        }\n\n        // Advance to the next fragment\n        function next() {\n            // If we are not a the end of the fragment list, then process it\n            if (++_f < _fragIds.length)\n                return true;\n\n            // Start the fragment list at the beginning\n            _f = 0;\n            for ( ; ; ) {\n                // If we have more database ids, then process them\n                if (nextDbId())\n                    return true;\n                // If we don't have another model, then we are done\n                if (!nextModel())\n                    return false;\n                // restart the database ids for the new model\n                _d = -1;\n            }\n        }\n    }\n\n    // Use the same fragment iterator for all fragments\n    var _fragIterator = new FragmentIterator();\n\n    function updateCapMeshes(plane) {\n\n        const cg = Autodesk.Viewing.Extensions.CompGeom;\n\n        var oldsection = _viewer.sceneAfter.getObjectByName(\"section\");\n        if (oldsection)\n            _viewer.sceneAfter.remove(oldsection);\n            \n        var section = new THREE.Object3D();\n        section.name = \"section\";\n        _viewer.sceneAfter.add(section);\n        \n        var section3D = new THREE.Object3D();\n        section.add(section3D);\n        var section2D = new THREE.Object3D();\n        section.add(section2D);\n\n        var avp = Autodesk.Viewing.Private;\n\n\n        var toPlaneCoords = cg.makePlaneBasis(plane);\n        var fromPaneCoords = new THREE.Matrix4().getInverse(toPlaneCoords);\n\n        var mat2dname = _viewer.matman().create2DMaterial(null, {skipCircles:true, skipEllipticals:true, isScreenSpace: true}, false, false);\n        var mat2d = _viewer.matman().findMaterial(null, mat2dname);\n        mat2d.transparent = true;\n        mat2d.depthTest = true;\n        mat2d.polygonOffset = true;\n        mat2d.polygonOffsetFactor = -1;\n        mat2d.polygonOffsetUnits = 0.1;    // 1.0 is usually way too high, see LMV-1072\n        mat2d.cutplanes = _otherCutPlanes; // make sure that cap meshes respect cutplanes from other tools\n\n        var box = new THREE.Box3();\n\n        //var worldBox = _viewer.getVisibleBounds(true);   \n        \n        //some heuristic for line width of the section outline based on model size.\n        //half a percent of the model size is what we do here.\n        //var lineWidth = 0.5 * 5e-5 * worldBox.size().length();\n\n        var models = _viewer.modelQueue().getModels();\n\n        var intersects = [];\n        var material;\n\n        function removeMesh(object, modelId, dbId, disposeMaterial) {\n            var child = object.children.find(function(mesh) {\n                return mesh.modelId == modelId && mesh.dbId == dbId;\n            });\n            if (child) {\n                object.remove(child);\n                if (child.geometry)\n                    child.geometry.dispose();\n                if (disposeMaterial && child.material)\n                    child.material.dispose();\n            }\n        }\n\n        // Start iterating the fragments\n        _fragIterator.start(models, 50, function(fragId, dbId, model, lastFrag) {\n\n            // Collect intersections for this fragment\n            var frags = model.getFragmentList();\n            frags.getWorldBounds(fragId, box);\n            if (cg.xBoxPlane(plane, box)) {\n                var m = frags.getVizmesh(fragId);\n\n                if (m.geometry && !m.geometry.is2d && !m.geometry.isLines && m.material.cutplanes) {\n                    material = m.material;\n                    cg.xMeshPlane(plane, m, intersects);\n                }\n            }\n\n            // If this is the last fragment for dbId, process the intersections\n            if (lastFrag) {\n                if (intersects.length) {\n\n                    var bbox = new THREE.Box3();\n                    cg.convertToPlaneCoords(toPlaneCoords, intersects, bbox);\n\n                    //Create the 2D line geometry\n                    var vbb = new avp.VertexBufferBuilder(false, 8 * intersects.length);\n\n                    var color = getDiffuseColor(material);\n                    var r = 0|(color.r * 0.25)*255.5;\n                    var g = 0|(color.g * 0.25)*255.5;\n                    var b = 0|(color.b * 0.25)*255.5;\n\n                    var c = 0xff000000 | (b<<16) | (g<<8) | r;\n\n\n                    var eset = new cg.EdgeSet(intersects, bbox, bbox.size().length() * 1e-6);\n                    eset.snapEdges();\n                    eset.sanitizeEdges();\n                    eset.stitchContours();\n\n                    //Create the 3D mesh\n                    var cset = eset.triangulate();\n\n//Testing code path using the fancier DCEL structure for triangulation of the section edges.\n//TODO: compare quality and performance before switching to this and retiring the EdgeSet code path\n/*\n                    var dcel = new DCEL(bbox, bbox.size().length() * 1e-6);\n                    intersects.forEach(e => {\n                        dcel.addDirectedEdge(e.v1.x, e.v1.y, e.v2.x, e.v2.y, true, dbId);\n                    });\n\n                    dcel.finalize(true);\n\n                    let cset = dcel.closedAreas[0];\n*/\n\n                    if (cset) {\n    /*\n                        if (cset.triangulationFailed)\n                            c = 0xffffff00;\n    */\n\n                        for (let j=0; j<cset.contours.length; j++) {\n\n                            var cntr = cset.contours[j];\n\n                            for (var k=1; k<cntr.length; k++) {\n                                var pt1 = cset.pts[cntr[k-1]];\n                                var pt2 = cset.pts[cntr[k]];\n                                vbb.addSegment(pt1.x, pt1.y, pt2.x, pt2.y, 0, -2.0, /*isClosed ? c : rc*/c, dbId, 0);\n                            }\n\n                        }\n\n\n                        var mdata = { mesh: vbb.toMesh() };\n\n                        avp.BufferGeometryUtils.meshToGeometry(mdata);\n\n                        var bg2d = mdata.geometry;\n                        bg2d.streamingDraw = true;\n                        bg2d.streamingIndex = true;\n\n                        var mesh2d = new THREE.Mesh(bg2d, mat2d);\n\n                        mesh2d.matrix.copy(fromPaneCoords);\n                        mesh2d.matrixAutoUpdate = false;\n                        mesh2d.frustumCulled = false;\n                        mesh2d.modelId = model.id;      // So we can look it up later\n                        mesh2d.dbId = dbId;\n                        section2D.add(mesh2d);\n\n                        //Create triangulated capping polygon\n                        {\n                            if (!cset.triangulationFailed) {\n\n                                var bg = cset.toPolygonMesh(material.packedNormals);\n\n                                var mat = _viewer.matman().cloneMaterial(material, model);\n\n                                mat.packedNormals = material.packedNormals;\n                                mat.cutplanes = _otherCutPlanes; // make sure that cap meshes respect cutplanes from other tools\n                                mat.side = THREE.FrontSide;\n                                mat.depthTest = true;\n                                mat.map = null;\n                                mat.bumpMap = null;\n                                mat.normalMap = null;\n                                mat.alphaMap = null;\n                                mat.specularMap = null;\n                                mat.transparent = false;\n                                mat.depthWrite = true;\n                                mat.hatchPattern = true;\n                                mat.needsUpdate = true;\n\n                                var angle = (material.id+2) * Math.PI * 0.125;\n                                var tan = Math.tan(angle);\n                                mat.hatchParams = new THREE.Vector2(tan, 10.0);\n                                mat.hatchTintColor = _tintColor;\n                                mat.hatchTintIntensity = _tintIntensity;\n\n                                // If the material is prism, clear all the map definitions.\n                                if (mat.prismType != null) {\n                                    mat.defines = {};\n                                    mat.defines[mat.prismType.toUpperCase()] = \"\";\n                                    if (mat.prismType == \"PrismWood\") {\n                                        mat.defines[\"NO_UVW\"] = \"\";\n                                    }\n                                }\n\n                                var capmesh = new THREE.Mesh(bg, mat);\n                                capmesh.matrix.copy(fromPaneCoords);\n                                capmesh.matrixAutoUpdate = false;\n                                capmesh.modelId = model.id;      // So we can look it up later\n                                capmesh.dbId = dbId;\n                                capmesh.fragId = intersects.fragId;\n\n                                section3D.add(capmesh);\n                            }\n\n                        }\n\n                    }\n                }\n\n                // Clear intersections for the next dbId\n                intersects.length = 0;\n            } // last Fragment for dbId\n\n        }); //_fragIterator.start\n\n    }\n\n    // We use an own cut plane set to distinguish our own cut planes from others.\n    var _ownCutPlaneSet = 'Autodesk.Viewing.Extension.Section.SectionTool';\n\n    // Make sure that the viewer always uses the SectionTool's plane to adjust 2D rendering resolution.\n    _viewer.setCutPlaneSetFor2DRendering(_ownCutPlaneSet);\n\n    // Keep track of cutplanes that are not our own, because we have to apply them to our cap meshes\n    var _otherCutPlanes = [];\n\n    // Trigger update of cap mesh materials if number of cutplanes have changed by other tools\n    function updateCapMaterials() {\n\n        // apply cutplanes to all active cap meshes\n        var section = _viewer.sceneAfter.getObjectByName(\"section\");\n        if (!section) {\n            return;\n        }\n\n        section.traverse(function(obj) {\n            // we only care for THREE.Mesh with material\n            if (!obj instanceof THREE.Mesh || !obj.material) {\n                return;\n            }\n            obj.material.needsUpdate = true;\n        });\n    }\n\n    function createPlaneMesh(plane, bbox) {\n        var quat = new THREE.Quaternion().setFromUnitVectors(new THREE.Vector3(0, 0, 1), plane.normal);\n        var geometry;\n        var size;\n\n        if (bbox) {\n            // project bbox to set plane size\n            var ptMax = plane.projectPoint(bbox.max);\n            var ptMin = plane.projectPoint(bbox.min);\n            var invQuat = quat.clone().inverse();\n            ptMax.applyQuaternion(invQuat);\n            ptMin.applyQuaternion(invQuat);\n            size = new THREE.Vector3().subVectors(ptMax, ptMin);\n            geometry = new THREE.PlaneBufferGeometry(size.x, size.y);\n        } else {\n            // project bounding sphere\n            bbox = _viewer.getVisibleBounds();\n            size = 2.0 * bbox.getBoundingSphere().radius;\n            geometry = new THREE.PlaneBufferGeometry(size, size);\n        }\n\n        var material = new THREE.MeshBasicMaterial({\n            opacity: 0,\n            color: _selectionColor,\n            side: THREE.DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n            transparent: true\n        });\n\n        var mesh = new SectionMeshClass(geometry, material, plane);\n        var pt = plane.projectPoint(bbox.center());       \n        mesh.position.copy(pt);\n        mesh.quaternion.multiply(quat);\n\n        // add outlines with inverted background color\n        var presetIndex = _viewer.currentLightPreset();\n        presetIndex = Math.max(0, presetIndex);\n        var bgColor = Autodesk.Viewing.Private.LightPresets[presetIndex].bgColorGradient;\n        var color = \"rgb(\" + (255-bgColor[0]) + \",\" + (255-bgColor[1]) + \",\" + (255-bgColor[2]) + \")\";\n        var lineMaterial = new THREE.LineBasicMaterial({color: color, linewidth:1, depthTest: false});\n        var pos = mesh.geometry.getAttribute('position');\n        for (var i = 0; i < _outlineIndices.length; i++) {\n            geometry = new THREE.Geometry();\n            geometry.vertices.push(new THREE.Vector3().fromArray(pos.array, _outlineIndices[i][0] * pos.itemSize),\n                                   new THREE.Vector3().fromArray(pos.array, _outlineIndices[i][1] * pos.itemSize));\n            var line = new THREE.Line(geometry, lineMaterial);\n            mesh.add(line);\n            mesh.outlines.push(line);\n        }\n\n        return mesh;\n    }\n\n    function updatePlaneMeshes(rebuild) {\n    \n        traverseSections(function(child) {\n            if (child instanceof SectionMeshClass) {\n\n                var i, line, pos, pt;\n                if (child.connectivity.length > 0) {\n                    // section box\n                    var minv = new THREE.Matrix4().getInverse(child.matrixWorld);\n                    pt = new THREE.Vector3();\n                    pos = child.geometry.getAttribute('position');\n                    for (i = 0; i < pos.length / pos.itemSize; i++) {\n                        var connect = child.connectivity[i];\n                        if (intersectPlanes(child.plane, connect[0], connect[1], pt) !== null) {\n                            pt.applyMatrix4(minv);\n                            pos.setXYZ(i, pt.x, pt.y, pt.z);\n                        }\n                    }\n                    pos.needsUpdate = true;\n                    child.geometry.computeBoundingBox();\n                    child.geometry.computeBoundingSphere();\n\n                    for (i = 0; i < child.outlines.length; i++) {\n                        line = child.outlines[i];\n                        line.geometry.vertices[0].fromArray(pos.array, _outlineIndices[i][0] * pos.itemSize);\n                        line.geometry.vertices[1].fromArray(pos.array, _outlineIndices[i][1] * pos.itemSize);\n                        line.geometry.verticesNeedUpdate = true;\n                    }\n                } else {\n                    // section plane\n                    if (rebuild) {\n                        var bbox = _viewer.getVisibleBounds();\n                        var size = 2.0 * bbox.getBoundingSphere().radius;\n                        pt = child.plane.projectPoint(bbox.center());\n                        child.geometry = new THREE.PlaneBufferGeometry(size, size);\n                        child.position.copy(pt);\n                        pos = child.geometry.getAttribute('position');\n                        for (i = 0; i < child.outlines.length; i++) {\n                            line = child.outlines[i];\n                            line.geometry.vertices[0].fromArray(pos.array, _outlineIndices[i][0] * pos.itemSize);\n                            line.geometry.vertices[1].fromArray(pos.array, _outlineIndices[i][1] * pos.itemSize);\n                            line.geometry.verticesNeedUpdate = true;\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    function traverseSections(callback) {\n        for (var i = 0; i < _sectionGroups.length; i++) {           \n            _sectionGroups[i].traverse(callback);\n        }\n    }\n\n    function setSectionPlanes(fireEvent=true) {\n        traverseSections(function(child) {\n            if (child instanceof SectionMeshClass) {\n                child.update();\n            }\n        });\n        if (_sectionPlanes.length === 1) {\n            updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n        }\n        _viewer.setCutPlaneSet(_ownCutPlaneSet, _sectionPlanes, fireEvent);\n    }\n\n    function showPlane(set) {\n        for (var i = 0; i < _sectionGroups.length; i++) {\n            _sectionGroups[i].visible = set;\n        }\n        \n        if (_isPlaneOn !== set)\n            updateViewer();\n\n        _isPlaneOn = set;\n    }\n\n    function showSection(set) {\n        if (set && _sectionPlanes.length > 0) {\n            if (_sectionPlanes.length === 1) {\n                updateCapMeshes(new THREE.Plane().setComponents(_sectionPlanes[0].x, _sectionPlanes[0].y, _sectionPlanes[0].z, _sectionPlanes[0].w));\n            }\n            _viewer.setCutPlaneSet(_ownCutPlaneSet, _sectionPlanes);\n        }\n        showPlane(set);\n    }\n\n    function attachControl(control, mesh) {\n        control.attach(mesh);\n        control.setPosition(mesh.position);\n        control.visible = true;\n    }\n\n    function checkNormal(normal) {\n        // flip normal if facing inward as eye direction\n        var eyeVec = _viewer.api.navigation.getEyeVector();\n        if (eyeVec.dot(normal) > 0) {\n            normal.negate();\n        }\n\n        return normal;\n    }\n\n    function setPlane(normal, distance, fireEvent=true) {\n        var obbox = _viewer.getVisibleBounds();\n        var center = obbox.center();\n        var group = new THREE.Group();\n        // Calculate the plane signed distance using the dot product of the center point of the scene bounding box\n        // and the normal vector.\n        distance = (distance !== undefined) ? distance : -1 * center.dot(normal);\n        var plane = new THREE.Plane(normal, distance);\n        var mesh = createPlaneMesh(plane, null);\n        group.add(mesh);\n        _sectionPlanes.push(mesh.planeVec);\n        _sectionGroups.push(group);\n        _viewer.addOverlay(_overlayName, group);\n        if (_transRotControl) {\n            attachControl(_transRotControl, mesh);\n            mesh.material.opacity = _selectionOpacity;\n            centerPlaneArrow(mesh);\n            _transRotControl.showRotationGizmos(true);\n            _sectionPicker = _transRotControl.getPicker();\n            \n        }\n        setSectionPlanes(fireEvent);\n    }\n\n    function getCenterPoint(mesh) {\n        var middle = new THREE.Vector3();\n        var geometry = mesh.geometry;\n    \n        geometry.computeBoundingBox();\n    \n        middle.x = (geometry.boundingBox.max.x + geometry.boundingBox.min.x) / 2;\n        middle.y = (geometry.boundingBox.max.y + geometry.boundingBox.min.y) / 2;\n        middle.z = (geometry.boundingBox.max.z + geometry.boundingBox.min.z) / 2;\n    \n        mesh.localToWorld( middle );\n        return middle;\n    }\n\n    /**\n     * Places the arrow at the center of the passed in mesh.\n     * @param {*} mesh \n     */\n    function centerPlaneArrow(mesh) {\n        if (!_transRotControl || !mesh) return false;\n        // Get the center of the plane and \n        // calculate the x,y,z offset between the plane position and the plane center\n        var centerOffset = getCenterPoint(mesh).sub(mesh.position);\n        centerOffset.sub(_trcOffset);\n        // Set the gizmo offset\n        _transRotControl.setGizmoOffset(centerOffset);\n        return true;\n    }\n\n    function setBox(planeSet) {\n        var normals = [\n            new THREE.Vector3(1, 0, 0), \n            new THREE.Vector3(0, 1, 0), \n            new THREE.Vector3(0, 0, 1),\n            new THREE.Vector3(-1, 0, 0),\n            new THREE.Vector3(0, -1, 0),\n            new THREE.Vector3(0, 0, -1)\n        ];\n\n        var connectivities = [\n            [[1, 2], [1, 5], [2, 4], [4, 5]], // 0\n            [[3, 5], [0, 5], [2, 3], [0, 2]], // 1\n            [[1, 3], [0, 1], [3, 4], [0, 4]], // 2\n            [[1, 5], [1, 2], [4, 5], [2, 4]], // 3\n            [[2, 3], [0, 2], [3, 5], [0, 5]], // 4\n            [[0, 1], [3, 1], [0, 4], [3, 4]]  // 5\n        ];\n\n        var group = new THREE.Group();\n        var obbox = _viewer.getVisibleBounds();\n        var center = obbox.center();\n        var bbox = new THREE.Box3(obbox.min, center);\n        \n        // Initialize from planeSet ONLY if it's an AABB.\n        var loadingBox = false;\n        if (planeSet && planeSet.length === 6 && planeSet[0].x === 1.0) {\n            // Assume that the order on planes is the same as in Array of normals defined above\n            bbox = new THREE.Box3(\n                new THREE.Vector3(planeSet[3].w, planeSet[4].w, planeSet[5].w),\n                new THREE.Vector3(planeSet[0].w, planeSet[1].w, planeSet[2].w)\n            );\n            center = bbox.max.clone();\n            loadingBox = true;\n        }\n\n        ////center = obbox.max;   // Use this to initialize the box around the model\n        ////bbox = obbox.clone(); // Use this to initialize the box around the model\n\n        var planes = [], meshes = [];\n        var i, mesh;\n        for (i = 0; i < normals.length; i++) {\n\n            if (loadingBox) {\n                var plane = new THREE.Plane(normals[i], planeSet[i].w);\n                planes.push(plane);\n            }\n            else \n            {\n                var plane = new THREE.Plane(normals[i], -1 * center.dot(normals[i]));\n                planes.push(plane);\n\n                // offset plane with negative normal to form an octant\n                if (i > 2) {\n                    var ptMax = plane.orthoPoint(bbox.max);\n                    var ptMin = plane.orthoPoint(bbox.min);\n                    var size = new THREE.Vector3().subVectors(ptMax, ptMin);\n                    plane.constant -= size.length();\n                }\n            }\n\n            mesh = createPlaneMesh(plane, bbox);\n            group.add(mesh);\n            meshes.push(mesh);\n            _sectionPlanes.push(mesh.planeVec);\n        }\n\n        // build connectivity\n        for (i = 0; i < meshes.length; i++) {\n            mesh = meshes[i];\n            var connectivity = connectivities[i];\n            for (var j = 0; j < connectivity.length; j++) {\n                var nc = [];\n                var ct = connectivity[j];\n                for (var k = 0; k < ct.length; k++) {\n                    nc.push(planes[ct[k]]);\n                }\n                mesh.connectivity.push(nc);\n            }\n        }\n        \n        _sectionGroups.push(group);\n        _viewer.addOverlay(_overlayName, group);\n\n        setSectionPlanes();\n        updatePlaneMeshes();\n\n        var plane = _sectionGroups[0].children[0];\n        attachControl(_transRotControl, plane);\n        // Set the plane opacity\n        plane.material.opacity = _selectionOpacity;\n        centerPlaneArrow(plane);\n\n        attachControl(_transControl, _sectionGroups[0]);\n        _transRotControl.showRotationGizmos(false);\n        _sectionPicker = _transRotControl.getPicker().concat(_transControl.getPicker());\n        // Calculate the offset to the max point of the bounding box.\n        var sectionBoxPosition = _sectionGroups[0].position.clone();\n        var cornerOffset = sectionBoxPosition.sub(center.clone());\n        _transControl.setGizmoOffset(cornerOffset);\n    }\n\n    var intersectPlanes = (function () {\n        var m = new THREE.Matrix3();\n        var n23 = new THREE.Vector3();\n        var n31 = new THREE.Vector3();\n        var n12 = new THREE.Vector3();\n        return function(plane1, plane2, plane3, optionalTarget) {\n            m.set(plane1.normal.x, plane1.normal.y, plane1.normal.z,\n                  plane2.normal.x, plane2.normal.y, plane2.normal.z,\n                  plane3.normal.x, plane3.normal.y, plane3.normal.z);\n            \n            var det = m.determinant();\n            if (det === 0) return null;\n\n            n23.crossVectors(plane2.normal, plane3.normal).multiplyScalar(-plane1.constant);\n            n31.crossVectors(plane3.normal, plane1.normal).multiplyScalar(-plane2.constant);\n            n12.crossVectors(plane1.normal, plane2.normal).multiplyScalar(-plane3.constant);\n\n            var result = optionalTarget || new THREE.Vector3();\n            return result.copy(n23).add(n31).add(n12).divideScalar(det);\n        };\n    })();\n\n    var intersectObjects = function(pointer, objects, recursive) {\n        return THREE.TransformControls.intersectObjects(pointer.canvasX, pointer.canvasY, objects, _viewer.camera, recursive);\n    };\n        \n    // public functions\n\n    /**\n     * When active, the geometry will be sectioned by the current set cut plane.\n     * @returns {boolean}\n     */\n    this.isActive = function() {\n        return _active;\n    };\n\n    /**\n     * Returns the signed distance of the sectioning plane from the origin\n     * @returns {Number} distance. Null distance is returned if there is no hit found from raycast\n     */\n    this.getSectionDistance = function(normal) {\n        // Find a target point in the direction of the camera \n        var eyeVec = _viewer.api.navigation.getEyeVector();\n        var hit = _viewer.rayIntersect(new THREE.Ray(_viewer.camera.position, eyeVec));\n        // DIstance\n        return hit && hit.intersectPoint && -1 * hit.intersectPoint.dot(normal);\n    };\n\n    /**\n     * Enables the cut planes that were created by the viewer.setCutPlanes() function.\n     * @param {boolean} [fireEvent] - if set to false the av.CUTPLANES_CHANGE_EVENT event will not be fired.\n     */\n    this.setViewerSection = function(fireEvent=true) {\n        this.clearSection(fireEvent);\n        var normal;\n        // Attempt to initialize the tool with a plane that is already set.\n        var planeSet = _viewer.getCutPlaneSet('__set_view');\n        if (planeSet.length !== 1) return;\n\n        _transRotControl.clientScale = 1;\n        var v4 = planeSet[0];\n        var normal = new THREE.Vector3(v4.x, v4.y, v4.z);\n        var distance = v4.w;\n        setPlane(normal, distance, fireEvent);\n        _activeMode = 'SET_VIEW_PLANE';\n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined, fireEvent);        \n    };\n\n    \n\n    /**\n     * Facilitates the initialization of a cut plane\n     * \n     * @param {String} name - Either 'X', 'Y', 'Z' or 'BOX'\n     */\n    this.setSection = function(name) {\n        this.clearSection();\n        _trcOffset = new THREE.Vector3();\n        var normal, distance;\n        _transRotControl.clientScale = 1;\n\n        // Attempt to initialize the tool with a plane that is already set.\n        var planeSet = _viewer.getCutPlaneSet('__set_view');\n        if (planeSet.length === 1 && name !== 'BOX' && name !== 'OBJ_SET_VIEW_PLANE') {\n            name = 'SET_VIEW_PLANE';\n        }\n        \n        switch (name) {\n            case 'X':\n                normal = new THREE.Vector3(1, 0, 0);\n                distance = this.getSectionDistance(normal);\n                setPlane(checkNormal(normal), distance);\n                break;\n            case 'Y':\n                normal = new THREE.Vector3(0, 1, 0);\n                distance = this.getSectionDistance(normal);\n                setPlane(checkNormal(normal), distance);\n                break;\n            case 'Z':\n                normal = new THREE.Vector3(0, 0, 1);\n                distance = this.getSectionDistance(normal);\n                setPlane(checkNormal(normal), distance);\n                break;\n            case 'OBJ_SET_VIEW_PLANE':\n            case 'SET_VIEW_PLANE':\n                var v4 = planeSet[0];\n                normal = new THREE.Vector3(v4.x, v4.y, v4.z);\n                setPlane(normal, v4.w);\n                break;\n            case 'OBJ_BOX':\n            case 'BOX':\n                setBox(planeSet);\n                _transRotControl.clientScale = 2;\n                this.recomputePivot();\n                break;\n        }\n        _activeMode = name;\n        \n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined);\n    };\n\n    /**\n     * Facilitates the initialization of a cut plane from a normal and distance\n     *\n     * @param {THREE.Vector4} normal (x,y,z) and distance (w)\n     * @param {Number} distance\n     */\n    this.setSectionFromPlane = function(cutplane) {\n        this.clearSection();\n        setPlane(new THREE.Vector3(cutplane.x, cutplane.y, cutplane.z), cutplane.w);\n        _activeMode = \"\";\n\n        // Clear sections from Viewer3D::setView\n        _viewer.setCutPlaneSet('__set_view', undefined);\n    };\n\n    /**\n     * Set the active mode\n     * @param {string} [name] - active mode name\n     * @private\n     */\n    this.setActiveMode = function(name) {\n        _activeMode = name || \"\";\n    }\n\n    /**\n     * Removes any (and all) currently set cut plane(s).\n     * @param {boolean} [fireEvent] - if set to false the av.CUTPLANES_CHANGE_EVENT event will not be fired.\n     */\n    this.clearSection = function(fireEvent=true) {\n\n        if (_transRotControl)\n            _transRotControl.detach();\n\n        if (_transControl)\n            _transControl.detach();\n\n        // remove all sections\n        while(_sectionPlanes.length > 0) {\n            _sectionPlanes.pop();\n        }\n\n        while(_sectionGroups.length > 0) {\n            var group = _sectionGroups.pop();\n            _viewer.removeOverlay(_overlayName, group);\n        }\n\n        _fragIterator.start(null);      // Shutdown iterator        \n        var oldsection = _viewer.sceneAfter.getObjectByName(\"section\");\n        if (oldsection)\n            _viewer.sceneAfter.remove(oldsection);\n\n        _viewer.setCutPlaneSet(_ownCutPlaneSet, null, fireEvent);\n    };\n\n    this.isPlaneOn = function() {\n        return _isPlaneOn;\n    };\n\n    this.showPlane = function(set) {\n        showPlane(set);\n    };\n\n    /**\n     * Whether translation and rotation controls are visible or not.\n     * @param {Boolean} set\n     */\n    this.attachControl = function(set) {\n        if (!_transRotControl || !_transControl) {\n            return;\n        }\n\n        if (set) {\n            attachControl(_transRotControl, _sectionGroups[0].children[0]);\n            _transRotControl.highlight();\n            if (_activeMode === 'BOX')\n                attachControl(_transControl, _sectionGroups[0]);\n        } else {\n            _transRotControl.detach();\n            _transControl.detach();\n        }\n    };\n\n    /**\n     * Invokes setSection with the last set of parameters used.\n     */\n    this.resetSection = function() {\n        this.setSection(_activeMode);\n    };\n\n    // tool interface\n\n    this.getNames = function() {\n        return _names;\n    };\n\n    this.getName = function() {\n        return _names[0];\n    };\n\n    this.register = function() {\n    };\n\n    this.deregister = function() {\n        this.clearSection();\n        deinitControl();\n    };\n\n    this.getPriority = function() {\n        return _priority;\n    };\n\n    /**\n     * [ToolInterface] Activates the tool\n     * @param {String} name - unused\n     */\n    this.activate = function(/*name*/) {\n\n        initControl();\n\n        _active = true;\n        _isDragging = false;\n        _visibleAtFirst = true;\n\n        // keep only one section all the time per design\n        _sectionPlanes = _sectionPlanes || [];\n\n        showSection(true);\n    };\n\n    /**\n     * [ToolInterface] Deactivates the tool\n     * @param {String} name - unused\n     */\n    this.deactivate = function(/*name*/) {\n        _active = false;\n        _isDragging = false;\n\n        _fragIterator.start(null);      // Shutdown iterator        \n        var oldsection = _viewer.sceneAfter.getObjectByName(\"section\");\n        if (oldsection)\n            _viewer.sceneAfter.remove(oldsection);\n\n\n        showSection(false);\n        _viewer.setCutPlaneSet(_ownCutPlaneSet);\n        _transRotControl.detach();\n        _transControl.detach();\n    };\n\n    this.update = function(/*highResTimestamp*/) {\n        return false;\n    };\n\n    this.handleSingleClick = function(event/*, button*/) {\n        var pointer = event;\n        var result = intersectObjects(pointer, _sectionGroups[0].children);\n        _sectionGroups[0].children.forEach(function(child) {\n            child.material.opacity = 0;\n        })\n        \n        if (result) {\n            attachControl(_transRotControl, result.object);\n            _transRotControl.highlight();\n            result.object.material.opacity = _selectionOpacity;\n            centerPlaneArrow(result.object);\n            updateViewer();\n        }\n\n        return false;\n    };\n\n    this.handleDoubleClick = function(/*event, button*/) {\n        return false;\n    };\n\n    this.handleSingleTap = function(event) {\n        return this.handleSingleClick(event, 0);\n    };\n\n    this.handleDoubleTap = function(/*event*/) {\n        return false;\n    };\n\n    this.handleKeyDown = function(/*event, keyCode*/) {\n        return false;\n    };\n\n     this.handleKeyUp = function(/*event, keyCode*/) {\n        return false;\n    };\n\n    this.handleWheelInput = function(/*delta*/) {\n        return false;\n    };\n\n    this.handleButtonDown = function(event/*, button*/) {\n        _isDragging = true;\n        if (_transControl.onPointerDown(event))\n            return true;\n        return _transRotControl.onPointerDown(event);\n    };\n\n    this.handleButtonUp = function(event/*, button*/) {\n        _isDragging = false;\n        if (_boxChanged) {\n            _boxChanged = false;\n            this.recomputePivot();\n        }\n        if (_transControl.onPointerUp(event))\n            return true;\n        return _transRotControl.onPointerUp(event);\n    };\n\n    this.handleMouseMove = function(event) {\n        var oldTransControlPos = _transControl.object ? new THREE.Vector3().copy(_transControl.object.position) : null;\n        // var oldMaxPoint = _transControl.object ? getMaxPoint(_transControl.object) : null;\n        if (_isDragging) {\n            if (_transControl.onPointerMove(event) ) {\n                _boxChanged = true;\n                setSectionPlanes();\n                _transRotControl.update();\n                // Keep track of the section box offset\n                var boxOffset = new THREE.Vector3().copy(_transControl.object.position).sub(oldTransControlPos);\n                // Add the box offset to the section plane offset\n                _trcOffset.add(boxOffset);\n                return true;\n            }\n            if (_transRotControl.onPointerMove(event)) {\n                _boxChanged = true;\n                setSectionPlanes();\n                updatePlaneMeshes();\n                // TODO: Try to position the triad to the max corner of the section box when moving the plane arrow.\n                // Currently, it is positioned at the max point of the section box.\n                return true;\n            }\n        }\n\n        _transControl.visible = _transControl.object !== undefined;\n\n        if (event.pointerType !== 'touch') {\n            var pointer = event;\n            var result = intersectObjects(pointer, _sectionGroups[0].children);\n            if (result) {\n                _visibleAtFirst = false;\n            }\n\n            // show gizmo + plane when intersecting on non-touch \n            var visible = _visibleAtFirst || (result || intersectObjects(pointer, _sectionPicker, true)) ? true : false;\n            _transRotControl.visible = visible;\n            _transControl.visible = _transControl.visible && visible;\n            showPlane(visible);\n        }\n\n        if (_transControl.onPointerHover(event))\n            return true;\n\n        return _transRotControl.onPointerHover(event);\n    };\n\n    this.handleGesture = function(event) {\n        switch (event.type) {\n            case \"dragstart\":\n                _touchType = \"drag\";\n                // Single touch, fake the mouse for now...\n                return this.handleButtonDown(event, 0);\n\n            case \"dragmove\":\n                return (_touchType === \"drag\") ? this.handleMouseMove(event) : false;\n\n            case \"dragend\":\n                if (_touchType === \"drag\") {\n                    _touchType = null;\n                    return this.handleButtonUp(event, 0);\n                }\n                return false;\n        }\n        return false;\n    };\n\n    this.handleBlur = function(/*event*/) {\n        return false;\n    };\n\n    this.handleResize = function() {\n    };\n\n    this.handlePressHold = function(/*event*/) {\n        return true;\n    };\n\n    this.recomputePivot = function() {\n\n        var values = this.getSectionBoxValues(true);\n        if (!values) return;\n\n        var aabb = values.sectionBox;\n\n        _viewer.api.navigation.setPivotPoint(new THREE.Vector3(\n            aabb[0] + (aabb[3] - aabb[0]) * 0.5,\n            aabb[1] + (aabb[4] - aabb[1]) * 0.5,\n            aabb[2] + (aabb[5] - aabb[2]) * 0.5,\n        ));\n    };\n\n    this.getSectionBoxValues = function(ignoreGlobalOffset) {\n\n        var group = _sectionGroups[0];\n        if (!group) {\n            return null;\n        }\n\n        var planes = group.children;\n        if (planes.length < 6) {\n            return null;\n        }\n\n        var right = planes[0].position.x;\n        var top   = planes[1].position.y;\n        var front = planes[2].position.z;\n        var left  = planes[3].position.x;\n        var bttm  = planes[4].position.y;\n        var back  = planes[5].position.z;\n\n        var off = {x:0, y:0, z:0};\n        if (!ignoreGlobalOffset) {\n            off = _viewer.model.getData().globalOffset || off;\n        } \n        \n        var aabb = [\n            Math.min(left, right)   + off.x, \n            Math.min(top,bttm)      + off.y, \n            Math.min(front,back)    + off.z,\n            Math.max(left, right)   + off.x, \n            Math.max(top,bttm)      + off.y, \n            Math.max(front,back)    + off.z,\n        ];\n\n        // Box doesn't support rotation at the moment.\n        // Will have to take it into account if that becomes a feature.\n        var transform = new THREE.Matrix4().identity().toArray();\n        \n        return {\n            sectionBox: aabb,\n            sectionBoxTransform: transform,\n        }\n    };\n\n    this.getSectionPlaneValues = function(ignoreGlobalOffset) {\n\n        var group = _sectionGroups[0];\n        if (!group) {\n            return null;\n        }\n\n        var planes = group.children;\n        if (planes.length !== 1) {\n            return null;\n        }\n\n        var off = {x:0, y:0, z:0};\n        if (!ignoreGlobalOffset) {\n            off = _viewer.model.getData().globalOffset || off;\n        }\n\n        var plane = planes[0].plane;\n        var constant = plane.constant - THREE.Vector3.prototype.dot.call( off, plane.normal );\n\n        return {\n            sectionPlane: [\n                plane.normal.x,\n                plane.normal.y,\n                plane.normal.z,\n                constant\n            ]\n        }\n    };\n    \n    this.getSectionPlaneSet = function() {\n        return _viewer.getCutPlaneSet(_ownCutPlaneSet);  \n    };\n    \n    this.getSectionPlanes = function() {\n        var result = [];\n\n        // When restoring a viewer state it is put in __set_view, so return from that set as well\n        var setsNames = ['__set_view', _ownCutPlaneSet];\n\n        setsNames.forEach((name) => {\n            var cp = _viewer.getCutPlaneSet(name);\n            if (cp.length > 0) {\n                result.push(...cp);\n            }\n        });\n\n        return result;\n    };\n\n    // Called by viewer if any cutplanes are modified. It makes sure that cutplanes controlled by separate tools\n    // (with own cutplane sets) are considered by our cap meshes.\n    this.notifyCutplanesChanged = function() {\n\n        var numCutPlanesBefore = _otherCutPlanes.length;\n\n        // Collect all active cutplanes from other tools\n        //\n        // NOTE: It's essential that we don't create a new array, but just refill the same one.\n        //       Since the cap meshes are created async, the cutPlaneChange event may come in the middle of\n        //       the cap mesh generation. For consistency, we want all cap meshes to share the same cutplane array.\n        _otherCutPlanes.length = 0;\n        var cpSets = _viewer.getCutPlaneSets();\n        for (var i=0; i<cpSets.length; i++) {\n\n            // skip our own cut planes\n            var cpName = cpSets[i];\n            if (cpName === _ownCutPlaneSet) {\n                continue;\n            }\n\n            // add cutplanes of this set\n            var cp = _viewer.getCutPlaneSet(cpName);\n            for (var j = 0; j < cp.length; j++) {\n                _otherCutPlanes.push(cp[j]);\n            }\n        }\n\n        // Set the section tool to the viewer defined cutplane.\n        if (cpSets.includes(\"__set_view\") && _activeMode !== \"\" && _activeMode.indexOf(\"OBJ_\") === -1) {\n            this.setViewerSection(false);\n        }\n\n        // If the number of cutplanes changed, this requires a shader recompile of the cap materials\n        if (numCutPlanesBefore !== _otherCutPlanes.length) {\n            updateCapMaterials();\n        }\n    };\n\n    /**\n     * Set a section box around the passed in bounding box.\n     * @param {THREE.Box3} box\n     * @returns {boolean} - true if the section box was set\n     */\n    this.setSectionBox = function(box) {\n        if (!box) return false;\n        const name = 'OBJ_BOX';        \n        // Convert the bounding box to planes\n        const planes = Autodesk.Viewing.Private.SceneMath.box2CutPlanes(box, box.transform);\n        _activeMode = name;\n        _viewer.setCutPlaneSet('__set_view', planes);\n        this.setSection(name);\n        return true;\n    };\n\n    /**\n     * Set a section plane at the intersection position.\n     * @param {Three.Vector3} normal - plane normal.\n     * @param {Three.Vector3} position - position to place the plane.\n     * @returns {boolean} - true if the section plane was set\n     */\n    this.setSectionPlane = function(normal, position) {\n        if (!normal || !position) return false;\n        const name = 'OBJ_SET_VIEW_PLANE'\n        const distance = -1 * position.dot(normal);\n        const plane = new THREE.Plane(normal, distance);\n        _activeMode = name;\n        const planeVecs = [new THREE.Vector4(plane.normal.x, plane.normal.y, plane.normal.z, plane.constant)];\n        _viewer.setCutPlaneSet('__set_view', planeVecs);\n        this.setSection(name);\n        return true;\n    };\n};\n\nfunction init_SectionMesh() {\n\n    if (SectionMeshClass)\n        return;\n\n    SectionMeshClass = function(geometry, material, plane) {\n\n        THREE.Mesh.call(this, geometry, material, false);\n\n        this.plane = plane;\n        this.planeVec = new THREE.Vector4(plane.normal.x, plane.normal.y, plane.normal.z, plane.constant);\n        this.connectivity = [];\n        this.outlines = [];\n    };\n\n    SectionMeshClass.prototype = Object.create(THREE.Mesh.prototype);\n    SectionMeshClass.prototype.constructor = SectionMeshClass;\n\n    SectionMeshClass.prototype.update = function() {\n\n        this.plane.normal.set(0, 0, 1);\n        this.plane.normal.applyQuaternion(this.quaternion);\n\n        var normal = this.plane.normal;\n        var d = -1 * this.getWorldPosition().dot(normal);\n        this.planeVec.set(normal.x, normal.y, normal.z, d);\n        this.plane.constant = d;\n    };\n\n}\n\n","import { SectionTool } from './SectionTool'\nimport CSS from './Section.css'\n\n/**\n * The SectionExtension provides ways to cut the geometry using planes or a cube.\n * The extension adds a toolbar button to access the feature. \n * \n * The extension id is: `Autodesk.Section`\n * \n * @example\n *   viewer.loadExtension('Autodesk.Section')\n * \n * @memberof Autodesk.Viewing.Extensions\n * @alias Autodesk.Viewing.Extensions.SectionExtension\n * @see {@link Autodesk.Viewing.Extension} for common inherited methods.\n * @constructor\n */\nexport var SectionExtension = function(viewer, options) {\n    Autodesk.Viewing.Extension.call(this, viewer, options);\n    this.viewer = viewer;\n    this.name = 'section';\n    this.modes = ['x','y','z','box'];\n\n    this.onViewerSetView = this.onViewerSetView.bind(this);\n    this.onCutPlanesChangedBinded = this.onCutPlanesChanged.bind(this);\n};\n\nSectionExtension.prototype = Object.create(Autodesk.Viewing.Extension.prototype);\nSectionExtension.prototype.constructor = SectionExtension;\n\nvar proto = SectionExtension.prototype;\n\n/**\n * Registers the SectionTool, hotkeys and event handlers.\n *\n * @returns {boolean}\n */\nproto.load = function() {\n    var that = this;\n    var viewer = this.viewer;\n\n    this.tool = new SectionTool(viewer, {\n        tintColor: { r: 1, g: 1, b: 0 },\n        tintIntensity: 0.2\n    });\n    viewer.toolController.registerTool(this.tool);\n    this.sectionStyle = null;\n    this.supportedStyles = [\"X\", \"Y\", \"Z\", \"BOX\"];\n\n    viewer.addEventListener(Autodesk.Viewing.SET_VIEW_EVENT, this.onViewerSetView);\n\n    // consider cutplane changes of other tools, so that cap meshes consider them too\n    viewer.addEventListener(Autodesk.Viewing.CUTPLANES_CHANGE_EVENT, this.onCutPlanesChangedBinded);\n\n    this.HOTKEYS_ID = \"Autodesk.Section.Hotkeys\";\n    var hotkeys = [{\n        keycodes: [\n            Autodesk.Viewing.KeyCode.ESCAPE\n        ],\n        onRelease: function () {\n            return that.deactivate();\n        }\n    }];\n    viewer.getHotkeyManager().pushHotkeys(this.HOTKEYS_ID, hotkeys);\n\n    //Load the required dependency (and return the pending load as the load completion Promise)\n    return this.viewer.loadExtension('Autodesk.CompGeom');\n};\n\n/**\n * Unregisters the SectionTool, hotkeys and event handlers.\n *\n * @returns {boolean}\n */\nproto.unload = function () {\n    var viewer = this.viewer;\n\n    // remove hotkey\n    viewer.getHotkeyManager().popHotkeys(this.HOTKEYS_ID);\n\n    this.destroyUI();\n\n    viewer.removeEventListener(Autodesk.Viewing.SET_VIEW_EVENT, this.onViewerSetView);\n    viewer.removeEventListener(Autodesk.Viewing.CUTPLANES_CHANGE_EVENT, this.onCutPlanesChangedBinded);\n\n    viewer.toolController.deregisterTool(this.tool);\n    this.tool = null;\n\n    return true;\n};\n\n/**\n * Toggles activeness of section planes.\n * @returns {boolean} Whether the section plane is active or not.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#toggle\n */\nproto.toggle = function() {\n    if (this.isActive()) {\n        this.enableSectionTool(false);\n    } else {\n        var style = this.sectionStyle || \"X\";\n        this.setSectionStyle(style, true);\n    }\n    return this.isActive(); // Need to check for isActive() again.\n};\n\n/**\n * Returns the current type of plane that will cut-though the geometry.\n *\n * @returns {null|String} Either \"X\" or \"Y\" or \"Z\" or \"BOX\" or null.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#getSectionStyle\n */\nproto.getSectionStyle = function() {\n    return this.sectionStyle;\n};\n\n/**\n * Sets the Section plane style.\n *\n * @param {String} style - Accepted values are 'X', 'Y', 'Z' and 'BOX' (in Caps)\n * @param {Boolean} [preserveSection] - Whether sending the current style value resets the cut planes.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionStyle\n */\nproto.setSectionStyle = function(style, preserveSection) {\n\n    if (this.supportedStyles.indexOf(style) === -1) {\n        return false;\n    }\n\n    var bActive = this.isActive();\n    var bNewStyle = (this.sectionStyle !== style) || !preserveSection;\n    this.sectionStyle = style;\n\n    if (bActive && bNewStyle) {\n        this.tool.setSection(style);\n    }\n    else if (!bActive) {\n        this.enableSectionTool(true);\n        if (bNewStyle) {\n            this.tool.setSection(style);\n        } else {\n            this.tool.attachControl(true);\n        }\n    }\n    return true;\n};\n\n/**\n * Use to set the section from an externally defined plane. For showing with line pattern\n * Tool itself will be disabled when setting the plane\n *\n * @param {THREE.Vector4} cutplane - send null to clear the section\n */\nproto.setSectionFromPlane = function(cutplane) {\n    this.deactivate();\n\n    if (cutplane) {\n        this.tool.setSectionFromPlane(cutplane);\n        this.tool.attachControl(false);\n    } else {\n        this.tool.clearSection();\n        var prevLock = this.viewer.toolController.setIsLocked(false);\n        this.enableSectionTool(false);\n        this.viewer.toolController.setIsLocked(prevLock);\n    }\n};\n\n/**\n * Returns the planes belonging only to the Section tool's set*\n */\nproto.getSectionPlanes = function() {\n    return this.tool.getSectionPlanes();\n};\n\n/**\n *\n * @param enable\n * @returns {boolean}\n * @private\n */\nproto.enableSectionTool = function(enable) {\n    var toolController = this.viewer.toolController,\n        isActive = this.tool.isActive();\n\n    if (enable && !isActive) {\n        toolController.activateTool(\"section\");\n        if (this.sectionToolButton) {\n            this.sectionToolButton.setState(Autodesk.Viewing.UI.Button.State.ACTIVE);\n        }\n        return true;\n\n    } else if (!enable && isActive) {\n        toolController.deactivateTool(\"section\");\n        if (this.sectionToolButton) {\n            this.sectionToolButton.setState(Autodesk.Viewing.UI.Button.State.INACTIVE);\n        }\n        return true;\n    }\n    return false;\n};\n\n/**\n * Returns an object that reperesents the state of the section planes\n * currently applied to the viewer by this extension.\n * \n * @param {THREE.Vector3|Object} [ignoreGlobalOffset=false]\n * \n * @returns {Object|null}\n */\nproto.getViewValues = function(ignoreGlobalOffset) {\n\n    var boxValues = this.tool.getSectionBoxValues(ignoreGlobalOffset);\n    if (boxValues)\n        return boxValues;\n\n    var planeValues = this.tool.getSectionPlaneValues(ignoreGlobalOffset);\n    if (planeValues)\n        return planeValues;\n\n    return null;\n};\n\n/**\n * Gets the extension state as a plain object. Invoked automatically by viewer.getState()\n * @param {object} viewerState - Object to inject extension values.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#getState\n */\nproto.getState = function(viewerState) {\n    if (!this.viewer.model || this.viewer.model.is2d()) {\n        return;\n    }\n\n    viewerState.cutplanes = viewerState.cutplanes || [];\n    var planes = this.tool.getSectionPlaneSet();\n    for (var i = 0; i < planes.length; i++) {\n        viewerState.cutplanes.push(planes[i].toArray());\n    }\n};\n\n/**\n * Restores the extension state from a given object. Invoked automatically by viewer.restoreState()\n * @param {object} viewerState - Viewer state.\n * @param {boolean} immediate - Whether the new view is applied with (true) or without transition (false).\n * @returns {boolean} True if restore operation was successful.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#restoreState\n */\nproto.restoreState = function(viewerState, immediate) {\n    this.setSectionFromPlane(null);   // Unload any existing planes first\n    \n    const cutplanes = this.getSectionPlanes();\n    if (cutplanes.length === 1) {\n        this.setSectionFromPlane(cutplanes[0]);\n    }\n    \n    return true;\n};\n\n/**\n * @private\n */\nproto.onCutPlanesChanged = function(/*event*/) {\n    this.tool.notifyCutplanesChanged();\n};\n\n/**\n * Set a section box around the passed in THREE.Box3.\n * This method will also enable the section tool.\n * @param {THREE.Box3} box - used to set the section box.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionBox\n */\nproto.setSectionBox = function(box) {\n    if (!box) return;\n    this.enableSectionTool(true);\n    if (this.tool.setSectionBox(box)) {\n        this.activeStatus = true;\n        this.viewer.clearSelection();\n    } else {\n        this.enableSectionTool(false);\n    }\n}\n\n/**\n * Place a section plane on the Intersection.\n * This method will also enable the section tool.\n * @param {Three.Vector3} normal - plane normal.\n * @param {Three.Vector3} position - position to place the plane.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#setSectionPlane\n */\nproto.setSectionPlane = function(normal, point) {\n    if (!normal || !point) return;\n    this.enableSectionTool(true);\n    if (this.tool.setSectionPlane(normal, point)) {\n        this.activeStatus = true;\n        this.viewer.clearSelection();\n    } else {\n        this.enableSectionTool(false);\n    }\n}\n\n/**\n * @private\n */\nproto.onViewerSetView = function(/*event*/) {\n    this.deactivate();\n};\n\n/***\n * @private\n */\nproto.onToolbarCreated = function(toolbar) {\n\n    var AVU = Autodesk.Viewing.UI;\n\n    this.sectionToolButton = new AVU.ComboButton(\"toolbar-sectionTool\");\n    this.sectionToolButton.setToolTip('Section analysis');\n    this.sectionToolButton.setIcon(\"adsk-icon-section-analysis\");\n    this.createSubmenu(this.sectionToolButton);\n\n    // make sure inspect tools is visible\n    var modelTools = toolbar.getControl(Autodesk.Viewing.TOOLBAR.MODELTOOLSID);\n\n    // place section tool before reset tool\n    if (modelTools) {\n        var resetTool = modelTools.getControl(\"toolbar-resetTool\");\n        if (resetTool) {\n            modelTools.addControl(this.sectionToolButton, {index: modelTools.indexOf(resetTool.getId())});\n        } else {\n            modelTools.addControl(this.sectionToolButton, {index: 0});\n        }\n    }\n};\n\n/**\n *\n * @param parentButton\n * @private\n */\nproto.createSubmenu = function(parentButton)\n{\n    var that = this;\n    var viewer = this.viewer;\n    var AVU = Autodesk.Viewing.UI;\n\n    function createNavToggler(button, name) {\n        return function() {\n            var state = button.getState();\n            var enable = function() {\n                if (button instanceof AVU.ComboButton === false) {\n                    that.activate(name);\n                } else {\n                    that.enableSectionTool(true);\n                    that.tool.attachControl(true);\n                }\n            };\n\n            if (state === AVU.Button.State.INACTIVE) {\n                button.setState(AVU.Button.State.ACTIVE);\n                // Long initialization may cause issues on touch enabled devices, make it async\n                if (Autodesk.Viewing.isMobileDevice()) {\n                    setTimeout(enable, 1);\n                } else {\n                    enable();\n                }\n            } else if (state === AVU.Button.State.ACTIVE) {\n                button.setState(AVU.Button.State.INACTIVE);\n                that.deactivate();\n            }\n            that.sectionStyle = name.toUpperCase();\n        };\n    }\n\n    function updateSectionButtons() {\n        var areVectorsEqual = (function () {\n            var v = new THREE.Vector3();\n            return function(a, b, sqtol) {\n                v.subVectors(a, b);\n                return v.lengthSq() < sqtol;\n            };\n        })();\n\n        var unitx = new THREE.Vector3(1, 0, 0);\n        var unity = new THREE.Vector3(0, 1, 0);\n        var unitz = new THREE.Vector3(0, 0, 1);\n        var right = viewer.autocam.getWorldRightVector();\n        var up = viewer.autocam.getWorldUpVector();\n        var front = viewer.autocam.getWorldFrontVector();\n\n        var tol = 0.0001;\n        if (areVectorsEqual(up, unitx, tol)) {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-x\");\n        } else if (areVectorsEqual(up, unitz, tol)) {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-z\");\n        } else {\n            that.sectionYButton.setIcon(\"adsk-icon-plane-y\");\n        }\n\n        if (areVectorsEqual(right, unity, tol)) {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-y\");\n        } else if (areVectorsEqual(right, unitz, tol)) {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-z\");\n        } else {\n            that.sectionXButton.setIcon(\"adsk-icon-plane-x\");\n        }\n\n        if (areVectorsEqual(front, unitx, tol)) {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-x\");\n        } else if (areVectorsEqual(front, unity, tol)) {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-y\");\n        } else {\n            that.sectionZButton.setIcon(\"adsk-icon-plane-z\");\n        }\n\n        viewer.removeEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, updateSectionButtons);\n    }\n\n    var sectionXButton = this.sectionXButton = new AVU.Button(\"toolbar-sectionTool-x\");\n    sectionXButton.setToolTip('Add X plane');\n    sectionXButton.setIcon(\"adsk-icon-plane-x\");\n    sectionXButton.onClick = createNavToggler(sectionXButton, 'x');\n    parentButton.addControl(sectionXButton);\n\n    var sectionYButton = this.sectionYButton = new AVU.Button(\"toolbar-sectionTool-y\");\n    sectionYButton.setToolTip('Add Y plane');\n    sectionYButton.setIcon(\"adsk-icon-plane-y\");\n    sectionYButton.onClick = createNavToggler(sectionYButton, 'y');\n    parentButton.addControl(sectionYButton);\n\n    var sectionZButton = this.sectionZButton = new AVU.Button(\"toolbar-sectionTool-z\");\n    sectionZButton.setToolTip('Add Z plane');\n    sectionZButton.setIcon(\"adsk-icon-plane-z\");\n    sectionZButton.onClick = createNavToggler(sectionZButton, 'z');\n    parentButton.addControl(sectionZButton);\n\n    var sectionBoxButton = this.sectionBoxButton = new AVU.Button(\"toolbar-sectionTool-box\");\n    sectionBoxButton.setToolTip('Add box');\n    sectionBoxButton.setIcon(\"adsk-icon-box\");\n    sectionBoxButton.onClick = createNavToggler(sectionBoxButton, 'box');\n    parentButton.addControl(sectionBoxButton);\n\n    viewer.addEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, updateSectionButtons);\n};\n\n/**\n * @private\n */\nproto.destroyUI = function() {\n    \n    if (this.sectionToolButton) {\n        this.sectionToolButton.removeFromParent();\n        this.sectionToolButton = null;\n    }\n};\n\n/**\n * Activates a section plane for user to interact with.\n * It performs the same action as the UI button.\n * \n * @param {string} mode - Accepted values are 'x', 'y', 'z' and 'box' (in lowercase)\n * @returns {boolean} - true if the activation was successful.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#activate\n */\nproto.activate = function (mode) {\n    if (this.activeStatus && this.mode === mode) {\n        return;\n    }\n    this.enableSectionTool(true);\n    switch (mode) {\n        default:\n        case 'x':\n            this.tool.setSection('X');\n            this.mode = 'x';\n            break;\n        case 'y':\n            this.tool.setSection('Y');\n            this.mode = 'y';\n            break;\n        case 'z':\n            this.tool.setSection('Z');\n            this.mode = 'z';\n            break;\n        case 'box':\n            this.tool.setSection('BOX');\n            this.mode = 'box';\n            break;\n        }\n    this.activeStatus = true;\n    return true;\n};\n\n/**\n * Removes the section plane/box from the 3D canvas.\n * @alias Autodesk.Viewing.Extensions.SectionExtension#deactivate\n * @returns {boolean} - returns true if deactivated, false otherwise.\n */\nproto.deactivate = function () {\n    if(this.activeStatus) {\n        this.enableSectionTool(false);\n        this.activeStatus = false;\n        this.tool.setActiveMode(\"\");\n        return true\n    }\n    return false;\n};\n\nAutodesk.Viewing.theExtensionManager.registerExtension('Autodesk.Section', SectionExtension);\n"],"sourceRoot":""}